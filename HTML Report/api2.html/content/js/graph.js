/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 289.0, "minX": 0.0, "maxY": 1542.0, "series": [{"data": [[0.0, 289.0], [0.1, 294.0], [0.2, 297.0], [0.3, 298.0], [0.4, 298.0], [0.5, 298.0], [0.6, 299.0], [0.7, 299.0], [0.8, 300.0], [0.9, 300.0], [1.0, 301.0], [1.1, 302.0], [1.2, 302.0], [1.3, 302.0], [1.4, 302.0], [1.5, 303.0], [1.6, 303.0], [1.7, 303.0], [1.8, 304.0], [1.9, 304.0], [2.0, 304.0], [2.1, 304.0], [2.2, 304.0], [2.3, 305.0], [2.4, 305.0], [2.5, 305.0], [2.6, 305.0], [2.7, 305.0], [2.8, 306.0], [2.9, 306.0], [3.0, 306.0], [3.1, 306.0], [3.2, 306.0], [3.3, 306.0], [3.4, 307.0], [3.5, 307.0], [3.6, 307.0], [3.7, 307.0], [3.8, 307.0], [3.9, 307.0], [4.0, 307.0], [4.1, 307.0], [4.2, 307.0], [4.3, 308.0], [4.4, 308.0], [4.5, 308.0], [4.6, 308.0], [4.7, 308.0], [4.8, 308.0], [4.9, 308.0], [5.0, 308.0], [5.1, 308.0], [5.2, 308.0], [5.3, 308.0], [5.4, 309.0], [5.5, 309.0], [5.6, 309.0], [5.7, 309.0], [5.8, 309.0], [5.9, 309.0], [6.0, 309.0], [6.1, 309.0], [6.2, 310.0], [6.3, 310.0], [6.4, 310.0], [6.5, 310.0], [6.6, 310.0], [6.7, 310.0], [6.8, 310.0], [6.9, 310.0], [7.0, 310.0], [7.1, 310.0], [7.2, 310.0], [7.3, 311.0], [7.4, 311.0], [7.5, 311.0], [7.6, 311.0], [7.7, 311.0], [7.8, 311.0], [7.9, 311.0], [8.0, 311.0], [8.1, 311.0], [8.2, 312.0], [8.3, 312.0], [8.4, 312.0], [8.5, 312.0], [8.6, 312.0], [8.7, 312.0], [8.8, 312.0], [8.9, 312.0], [9.0, 312.0], [9.1, 313.0], [9.2, 313.0], [9.3, 313.0], [9.4, 313.0], [9.5, 313.0], [9.6, 313.0], [9.7, 313.0], [9.8, 313.0], [9.9, 313.0], [10.0, 313.0], [10.1, 313.0], [10.2, 313.0], [10.3, 313.0], [10.4, 313.0], [10.5, 314.0], [10.6, 314.0], [10.7, 314.0], [10.8, 314.0], [10.9, 314.0], [11.0, 314.0], [11.1, 314.0], [11.2, 314.0], [11.3, 314.0], [11.4, 314.0], [11.5, 314.0], [11.6, 314.0], [11.7, 315.0], [11.8, 315.0], [11.9, 315.0], [12.0, 315.0], [12.1, 315.0], [12.2, 315.0], [12.3, 315.0], [12.4, 315.0], [12.5, 315.0], [12.6, 315.0], [12.7, 315.0], [12.8, 315.0], [12.9, 315.0], [13.0, 315.0], [13.1, 316.0], [13.2, 316.0], [13.3, 316.0], [13.4, 316.0], [13.5, 316.0], [13.6, 316.0], [13.7, 316.0], [13.8, 316.0], [13.9, 316.0], [14.0, 316.0], [14.1, 316.0], [14.2, 316.0], [14.3, 316.0], [14.4, 316.0], [14.5, 316.0], [14.6, 316.0], [14.7, 317.0], [14.8, 317.0], [14.9, 317.0], [15.0, 317.0], [15.1, 317.0], [15.2, 317.0], [15.3, 317.0], [15.4, 317.0], [15.5, 317.0], [15.6, 317.0], [15.7, 317.0], [15.8, 317.0], [15.9, 317.0], [16.0, 318.0], [16.1, 318.0], [16.2, 318.0], [16.3, 318.0], [16.4, 318.0], [16.5, 318.0], [16.6, 318.0], [16.7, 318.0], [16.8, 318.0], [16.9, 318.0], [17.0, 318.0], [17.1, 318.0], [17.2, 318.0], [17.3, 318.0], [17.4, 318.0], [17.5, 318.0], [17.6, 318.0], [17.7, 319.0], [17.8, 319.0], [17.9, 319.0], [18.0, 319.0], [18.1, 319.0], [18.2, 319.0], [18.3, 319.0], [18.4, 319.0], [18.5, 319.0], [18.6, 319.0], [18.7, 319.0], [18.8, 319.0], [18.9, 319.0], [19.0, 319.0], [19.1, 319.0], [19.2, 319.0], [19.3, 320.0], [19.4, 320.0], [19.5, 320.0], [19.6, 320.0], [19.7, 320.0], [19.8, 320.0], [19.9, 320.0], [20.0, 320.0], [20.1, 320.0], [20.2, 320.0], [20.3, 320.0], [20.4, 320.0], [20.5, 320.0], [20.6, 320.0], [20.7, 320.0], [20.8, 320.0], [20.9, 320.0], [21.0, 320.0], [21.1, 320.0], [21.2, 320.0], [21.3, 320.0], [21.4, 320.0], [21.5, 321.0], [21.6, 321.0], [21.7, 321.0], [21.8, 321.0], [21.9, 321.0], [22.0, 321.0], [22.1, 321.0], [22.2, 321.0], [22.3, 321.0], [22.4, 321.0], [22.5, 321.0], [22.6, 321.0], [22.7, 321.0], [22.8, 321.0], [22.9, 321.0], [23.0, 321.0], [23.1, 322.0], [23.2, 322.0], [23.3, 322.0], [23.4, 322.0], [23.5, 322.0], [23.6, 322.0], [23.7, 322.0], [23.8, 322.0], [23.9, 322.0], [24.0, 322.0], [24.1, 322.0], [24.2, 322.0], [24.3, 322.0], [24.4, 322.0], [24.5, 322.0], [24.6, 322.0], [24.7, 322.0], [24.8, 322.0], [24.9, 322.0], [25.0, 322.0], [25.1, 322.0], [25.2, 323.0], [25.3, 323.0], [25.4, 323.0], [25.5, 323.0], [25.6, 323.0], [25.7, 323.0], [25.8, 323.0], [25.9, 323.0], [26.0, 323.0], [26.1, 323.0], [26.2, 323.0], [26.3, 323.0], [26.4, 323.0], [26.5, 323.0], [26.6, 323.0], [26.7, 323.0], [26.8, 323.0], [26.9, 323.0], [27.0, 324.0], [27.1, 324.0], [27.2, 324.0], [27.3, 324.0], [27.4, 324.0], [27.5, 324.0], [27.6, 324.0], [27.7, 324.0], [27.8, 324.0], [27.9, 324.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 324.0], [28.4, 324.0], [28.5, 324.0], [28.6, 324.0], [28.7, 324.0], [28.8, 324.0], [28.9, 324.0], [29.0, 325.0], [29.1, 325.0], [29.2, 325.0], [29.3, 325.0], [29.4, 325.0], [29.5, 325.0], [29.6, 325.0], [29.7, 325.0], [29.8, 325.0], [29.9, 325.0], [30.0, 325.0], [30.1, 325.0], [30.2, 325.0], [30.3, 325.0], [30.4, 325.0], [30.5, 325.0], [30.6, 326.0], [30.7, 326.0], [30.8, 326.0], [30.9, 326.0], [31.0, 326.0], [31.1, 326.0], [31.2, 326.0], [31.3, 326.0], [31.4, 326.0], [31.5, 326.0], [31.6, 326.0], [31.7, 326.0], [31.8, 326.0], [31.9, 326.0], [32.0, 326.0], [32.1, 326.0], [32.2, 326.0], [32.3, 326.0], [32.4, 326.0], [32.5, 326.0], [32.6, 326.0], [32.7, 326.0], [32.8, 326.0], [32.9, 327.0], [33.0, 327.0], [33.1, 327.0], [33.2, 327.0], [33.3, 327.0], [33.4, 327.0], [33.5, 327.0], [33.6, 327.0], [33.7, 327.0], [33.8, 327.0], [33.9, 327.0], [34.0, 327.0], [34.1, 327.0], [34.2, 327.0], [34.3, 327.0], [34.4, 327.0], [34.5, 327.0], [34.6, 327.0], [34.7, 327.0], [34.8, 328.0], [34.9, 328.0], [35.0, 328.0], [35.1, 328.0], [35.2, 328.0], [35.3, 328.0], [35.4, 328.0], [35.5, 328.0], [35.6, 328.0], [35.7, 328.0], [35.8, 328.0], [35.9, 328.0], [36.0, 328.0], [36.1, 328.0], [36.2, 328.0], [36.3, 328.0], [36.4, 328.0], [36.5, 328.0], [36.6, 328.0], [36.7, 328.0], [36.8, 328.0], [36.9, 328.0], [37.0, 328.0], [37.1, 328.0], [37.2, 328.0], [37.3, 328.0], [37.4, 329.0], [37.5, 329.0], [37.6, 329.0], [37.7, 329.0], [37.8, 329.0], [37.9, 329.0], [38.0, 329.0], [38.1, 329.0], [38.2, 329.0], [38.3, 329.0], [38.4, 329.0], [38.5, 329.0], [38.6, 329.0], [38.7, 329.0], [38.8, 329.0], [38.9, 329.0], [39.0, 329.0], [39.1, 329.0], [39.2, 329.0], [39.3, 330.0], [39.4, 330.0], [39.5, 330.0], [39.6, 330.0], [39.7, 330.0], [39.8, 330.0], [39.9, 330.0], [40.0, 330.0], [40.1, 330.0], [40.2, 330.0], [40.3, 330.0], [40.4, 330.0], [40.5, 330.0], [40.6, 330.0], [40.7, 330.0], [40.8, 330.0], [40.9, 330.0], [41.0, 330.0], [41.1, 330.0], [41.2, 331.0], [41.3, 331.0], [41.4, 331.0], [41.5, 331.0], [41.6, 331.0], [41.7, 331.0], [41.8, 331.0], [41.9, 331.0], [42.0, 331.0], [42.1, 331.0], [42.2, 331.0], [42.3, 331.0], [42.4, 331.0], [42.5, 331.0], [42.6, 331.0], [42.7, 332.0], [42.8, 332.0], [42.9, 332.0], [43.0, 332.0], [43.1, 332.0], [43.2, 332.0], [43.3, 332.0], [43.4, 332.0], [43.5, 332.0], [43.6, 332.0], [43.7, 332.0], [43.8, 332.0], [43.9, 332.0], [44.0, 332.0], [44.1, 332.0], [44.2, 332.0], [44.3, 332.0], [44.4, 332.0], [44.5, 333.0], [44.6, 333.0], [44.7, 333.0], [44.8, 333.0], [44.9, 333.0], [45.0, 333.0], [45.1, 333.0], [45.2, 333.0], [45.3, 333.0], [45.4, 333.0], [45.5, 333.0], [45.6, 333.0], [45.7, 333.0], [45.8, 333.0], [45.9, 333.0], [46.0, 333.0], [46.1, 333.0], [46.2, 333.0], [46.3, 333.0], [46.4, 333.0], [46.5, 334.0], [46.6, 334.0], [46.7, 334.0], [46.8, 334.0], [46.9, 334.0], [47.0, 334.0], [47.1, 334.0], [47.2, 334.0], [47.3, 334.0], [47.4, 334.0], [47.5, 334.0], [47.6, 334.0], [47.7, 334.0], [47.8, 334.0], [47.9, 334.0], [48.0, 334.0], [48.1, 334.0], [48.2, 334.0], [48.3, 335.0], [48.4, 335.0], [48.5, 335.0], [48.6, 335.0], [48.7, 335.0], [48.8, 335.0], [48.9, 335.0], [49.0, 335.0], [49.1, 335.0], [49.2, 335.0], [49.3, 335.0], [49.4, 335.0], [49.5, 335.0], [49.6, 335.0], [49.7, 335.0], [49.8, 335.0], [49.9, 335.0], [50.0, 336.0], [50.1, 336.0], [50.2, 336.0], [50.3, 336.0], [50.4, 336.0], [50.5, 336.0], [50.6, 336.0], [50.7, 336.0], [50.8, 336.0], [50.9, 336.0], [51.0, 336.0], [51.1, 336.0], [51.2, 336.0], [51.3, 336.0], [51.4, 336.0], [51.5, 336.0], [51.6, 336.0], [51.7, 336.0], [51.8, 336.0], [51.9, 337.0], [52.0, 337.0], [52.1, 337.0], [52.2, 337.0], [52.3, 337.0], [52.4, 337.0], [52.5, 337.0], [52.6, 337.0], [52.7, 337.0], [52.8, 337.0], [52.9, 337.0], [53.0, 337.0], [53.1, 337.0], [53.2, 337.0], [53.3, 337.0], [53.4, 338.0], [53.5, 338.0], [53.6, 338.0], [53.7, 338.0], [53.8, 338.0], [53.9, 338.0], [54.0, 338.0], [54.1, 338.0], [54.2, 338.0], [54.3, 338.0], [54.4, 338.0], [54.5, 338.0], [54.6, 338.0], [54.7, 338.0], [54.8, 338.0], [54.9, 338.0], [55.0, 338.0], [55.1, 338.0], [55.2, 338.0], [55.3, 338.0], [55.4, 339.0], [55.5, 339.0], [55.6, 339.0], [55.7, 339.0], [55.8, 339.0], [55.9, 339.0], [56.0, 339.0], [56.1, 339.0], [56.2, 339.0], [56.3, 339.0], [56.4, 339.0], [56.5, 340.0], [56.6, 340.0], [56.7, 340.0], [56.8, 340.0], [56.9, 340.0], [57.0, 340.0], [57.1, 340.0], [57.2, 340.0], [57.3, 340.0], [57.4, 340.0], [57.5, 340.0], [57.6, 340.0], [57.7, 340.0], [57.8, 340.0], [57.9, 340.0], [58.0, 340.0], [58.1, 341.0], [58.2, 341.0], [58.3, 341.0], [58.4, 341.0], [58.5, 341.0], [58.6, 341.0], [58.7, 341.0], [58.8, 341.0], [58.9, 341.0], [59.0, 341.0], [59.1, 341.0], [59.2, 341.0], [59.3, 341.0], [59.4, 341.0], [59.5, 341.0], [59.6, 341.0], [59.7, 342.0], [59.8, 342.0], [59.9, 342.0], [60.0, 342.0], [60.1, 342.0], [60.2, 342.0], [60.3, 342.0], [60.4, 342.0], [60.5, 342.0], [60.6, 342.0], [60.7, 342.0], [60.8, 342.0], [60.9, 342.0], [61.0, 342.0], [61.1, 342.0], [61.2, 342.0], [61.3, 343.0], [61.4, 343.0], [61.5, 343.0], [61.6, 343.0], [61.7, 343.0], [61.8, 343.0], [61.9, 343.0], [62.0, 343.0], [62.1, 343.0], [62.2, 343.0], [62.3, 343.0], [62.4, 344.0], [62.5, 344.0], [62.6, 344.0], [62.7, 344.0], [62.8, 344.0], [62.9, 344.0], [63.0, 344.0], [63.1, 344.0], [63.2, 344.0], [63.3, 344.0], [63.4, 344.0], [63.5, 344.0], [63.6, 344.0], [63.7, 345.0], [63.8, 345.0], [63.9, 345.0], [64.0, 345.0], [64.1, 345.0], [64.2, 345.0], [64.3, 345.0], [64.4, 345.0], [64.5, 345.0], [64.6, 345.0], [64.7, 345.0], [64.8, 345.0], [64.9, 345.0], [65.0, 345.0], [65.1, 345.0], [65.2, 346.0], [65.3, 346.0], [65.4, 346.0], [65.5, 346.0], [65.6, 346.0], [65.7, 346.0], [65.8, 346.0], [65.9, 346.0], [66.0, 346.0], [66.1, 346.0], [66.2, 346.0], [66.3, 346.0], [66.4, 347.0], [66.5, 347.0], [66.6, 347.0], [66.7, 347.0], [66.8, 347.0], [66.9, 347.0], [67.0, 347.0], [67.1, 347.0], [67.2, 347.0], [67.3, 347.0], [67.4, 347.0], [67.5, 347.0], [67.6, 347.0], [67.7, 348.0], [67.8, 348.0], [67.9, 348.0], [68.0, 348.0], [68.1, 348.0], [68.2, 348.0], [68.3, 348.0], [68.4, 348.0], [68.5, 348.0], [68.6, 348.0], [68.7, 348.0], [68.8, 348.0], [68.9, 349.0], [69.0, 349.0], [69.1, 349.0], [69.2, 349.0], [69.3, 349.0], [69.4, 349.0], [69.5, 349.0], [69.6, 349.0], [69.7, 349.0], [69.8, 349.0], [69.9, 350.0], [70.0, 350.0], [70.1, 350.0], [70.2, 350.0], [70.3, 350.0], [70.4, 350.0], [70.5, 350.0], [70.6, 350.0], [70.7, 350.0], [70.8, 350.0], [70.9, 350.0], [71.0, 350.0], [71.1, 351.0], [71.2, 351.0], [71.3, 351.0], [71.4, 351.0], [71.5, 351.0], [71.6, 351.0], [71.7, 351.0], [71.8, 351.0], [71.9, 351.0], [72.0, 352.0], [72.1, 352.0], [72.2, 352.0], [72.3, 352.0], [72.4, 352.0], [72.5, 352.0], [72.6, 352.0], [72.7, 352.0], [72.8, 352.0], [72.9, 352.0], [73.0, 353.0], [73.1, 353.0], [73.2, 353.0], [73.3, 353.0], [73.4, 353.0], [73.5, 353.0], [73.6, 353.0], [73.7, 353.0], [73.8, 354.0], [73.9, 354.0], [74.0, 354.0], [74.1, 354.0], [74.2, 354.0], [74.3, 354.0], [74.4, 354.0], [74.5, 354.0], [74.6, 354.0], [74.7, 354.0], [74.8, 355.0], [74.9, 355.0], [75.0, 355.0], [75.1, 355.0], [75.2, 355.0], [75.3, 355.0], [75.4, 355.0], [75.5, 356.0], [75.6, 356.0], [75.7, 356.0], [75.8, 356.0], [75.9, 356.0], [76.0, 356.0], [76.1, 356.0], [76.2, 357.0], [76.3, 357.0], [76.4, 357.0], [76.5, 357.0], [76.6, 357.0], [76.7, 357.0], [76.8, 357.0], [76.9, 358.0], [77.0, 358.0], [77.1, 358.0], [77.2, 358.0], [77.3, 358.0], [77.4, 358.0], [77.5, 359.0], [77.6, 359.0], [77.7, 359.0], [77.8, 359.0], [77.9, 359.0], [78.0, 359.0], [78.1, 359.0], [78.2, 360.0], [78.3, 360.0], [78.4, 360.0], [78.5, 360.0], [78.6, 360.0], [78.7, 360.0], [78.8, 360.0], [78.9, 361.0], [79.0, 361.0], [79.1, 361.0], [79.2, 361.0], [79.3, 361.0], [79.4, 361.0], [79.5, 361.0], [79.6, 361.0], [79.7, 362.0], [79.8, 362.0], [79.9, 362.0], [80.0, 362.0], [80.1, 362.0], [80.2, 362.0], [80.3, 362.0], [80.4, 363.0], [80.5, 363.0], [80.6, 363.0], [80.7, 363.0], [80.8, 363.0], [80.9, 363.0], [81.0, 364.0], [81.1, 364.0], [81.2, 364.0], [81.3, 364.0], [81.4, 364.0], [81.5, 364.0], [81.6, 364.0], [81.7, 365.0], [81.8, 365.0], [81.9, 365.0], [82.0, 365.0], [82.1, 365.0], [82.2, 365.0], [82.3, 365.0], [82.4, 365.0], [82.5, 366.0], [82.6, 366.0], [82.7, 366.0], [82.8, 366.0], [82.9, 366.0], [83.0, 367.0], [83.1, 367.0], [83.2, 367.0], [83.3, 367.0], [83.4, 367.0], [83.5, 368.0], [83.6, 368.0], [83.7, 368.0], [83.8, 368.0], [83.9, 368.0], [84.0, 368.0], [84.1, 369.0], [84.2, 369.0], [84.3, 369.0], [84.4, 369.0], [84.5, 370.0], [84.6, 370.0], [84.7, 370.0], [84.8, 370.0], [84.9, 370.0], [85.0, 370.0], [85.1, 371.0], [85.2, 371.0], [85.3, 371.0], [85.4, 371.0], [85.5, 372.0], [85.6, 372.0], [85.7, 372.0], [85.8, 372.0], [85.9, 373.0], [86.0, 373.0], [86.1, 373.0], [86.2, 373.0], [86.3, 374.0], [86.4, 374.0], [86.5, 374.0], [86.6, 375.0], [86.7, 375.0], [86.8, 375.0], [86.9, 375.0], [87.0, 375.0], [87.1, 376.0], [87.2, 376.0], [87.3, 376.0], [87.4, 377.0], [87.5, 377.0], [87.6, 377.0], [87.7, 377.0], [87.8, 377.0], [87.9, 378.0], [88.0, 378.0], [88.1, 378.0], [88.2, 378.0], [88.3, 378.0], [88.4, 379.0], [88.5, 379.0], [88.6, 380.0], [88.7, 380.0], [88.8, 380.0], [88.9, 380.0], [89.0, 380.0], [89.1, 381.0], [89.2, 381.0], [89.3, 381.0], [89.4, 382.0], [89.5, 382.0], [89.6, 383.0], [89.7, 383.0], [89.8, 384.0], [89.9, 384.0], [90.0, 384.0], [90.1, 385.0], [90.2, 385.0], [90.3, 385.0], [90.4, 386.0], [90.5, 386.0], [90.6, 387.0], [90.7, 387.0], [90.8, 387.0], [90.9, 389.0], [91.0, 389.0], [91.1, 389.0], [91.2, 390.0], [91.3, 390.0], [91.4, 390.0], [91.5, 390.0], [91.6, 391.0], [91.7, 391.0], [91.8, 392.0], [91.9, 392.0], [92.0, 393.0], [92.1, 393.0], [92.2, 394.0], [92.3, 394.0], [92.4, 395.0], [92.5, 395.0], [92.6, 396.0], [92.7, 396.0], [92.8, 396.0], [92.9, 397.0], [93.0, 398.0], [93.1, 398.0], [93.2, 399.0], [93.3, 400.0], [93.4, 400.0], [93.5, 401.0], [93.6, 402.0], [93.7, 402.0], [93.8, 403.0], [93.9, 404.0], [94.0, 404.0], [94.1, 406.0], [94.2, 406.0], [94.3, 407.0], [94.4, 408.0], [94.5, 409.0], [94.6, 410.0], [94.7, 410.0], [94.8, 411.0], [94.9, 412.0], [95.0, 414.0], [95.1, 416.0], [95.2, 418.0], [95.3, 419.0], [95.4, 420.0], [95.5, 421.0], [95.6, 423.0], [95.7, 424.0], [95.8, 425.0], [95.9, 428.0], [96.0, 429.0], [96.1, 430.0], [96.2, 431.0], [96.3, 432.0], [96.4, 433.0], [96.5, 436.0], [96.6, 437.0], [96.7, 438.0], [96.8, 438.0], [96.9, 440.0], [97.0, 442.0], [97.1, 443.0], [97.2, 448.0], [97.3, 449.0], [97.4, 451.0], [97.5, 451.0], [97.6, 456.0], [97.7, 461.0], [97.8, 465.0], [97.9, 468.0], [98.0, 470.0], [98.1, 471.0], [98.2, 473.0], [98.3, 476.0], [98.4, 478.0], [98.5, 478.0], [98.6, 481.0], [98.7, 486.0], [98.8, 492.0], [98.9, 509.0], [99.0, 521.0], [99.1, 537.0], [99.2, 548.0], [99.3, 560.0], [99.4, 577.0], [99.5, 586.0], [99.6, 611.0], [99.7, 640.0], [99.8, 652.0], [99.9, 1041.0], [100.0, 1157.0]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[0.0, 296.0], [0.1, 299.0], [0.2, 302.0], [0.3, 304.0], [0.4, 304.0], [0.5, 304.0], [0.6, 305.0], [0.7, 305.0], [0.8, 306.0], [0.9, 306.0], [1.0, 306.0], [1.1, 307.0], [1.2, 307.0], [1.3, 308.0], [1.4, 308.0], [1.5, 308.0], [1.6, 309.0], [1.7, 309.0], [1.8, 309.0], [1.9, 310.0], [2.0, 310.0], [2.1, 310.0], [2.2, 311.0], [2.3, 311.0], [2.4, 311.0], [2.5, 311.0], [2.6, 311.0], [2.7, 311.0], [2.8, 312.0], [2.9, 312.0], [3.0, 312.0], [3.1, 312.0], [3.2, 313.0], [3.3, 313.0], [3.4, 313.0], [3.5, 313.0], [3.6, 313.0], [3.7, 313.0], [3.8, 314.0], [3.9, 314.0], [4.0, 314.0], [4.1, 314.0], [4.2, 314.0], [4.3, 314.0], [4.4, 314.0], [4.5, 314.0], [4.6, 315.0], [4.7, 315.0], [4.8, 315.0], [4.9, 315.0], [5.0, 315.0], [5.1, 315.0], [5.2, 315.0], [5.3, 316.0], [5.4, 316.0], [5.5, 316.0], [5.6, 316.0], [5.7, 316.0], [5.8, 316.0], [5.9, 316.0], [6.0, 316.0], [6.1, 316.0], [6.2, 317.0], [6.3, 317.0], [6.4, 317.0], [6.5, 317.0], [6.6, 317.0], [6.7, 317.0], [6.8, 318.0], [6.9, 318.0], [7.0, 318.0], [7.1, 318.0], [7.2, 318.0], [7.3, 318.0], [7.4, 318.0], [7.5, 318.0], [7.6, 318.0], [7.7, 318.0], [7.8, 318.0], [7.9, 318.0], [8.0, 318.0], [8.1, 319.0], [8.2, 319.0], [8.3, 319.0], [8.4, 319.0], [8.5, 319.0], [8.6, 319.0], [8.7, 319.0], [8.8, 319.0], [8.9, 320.0], [9.0, 320.0], [9.1, 320.0], [9.2, 320.0], [9.3, 320.0], [9.4, 320.0], [9.5, 320.0], [9.6, 320.0], [9.7, 320.0], [9.8, 320.0], [9.9, 320.0], [10.0, 320.0], [10.1, 320.0], [10.2, 321.0], [10.3, 321.0], [10.4, 321.0], [10.5, 321.0], [10.6, 321.0], [10.7, 321.0], [10.8, 321.0], [10.9, 321.0], [11.0, 321.0], [11.1, 321.0], [11.2, 322.0], [11.3, 322.0], [11.4, 322.0], [11.5, 322.0], [11.6, 322.0], [11.7, 322.0], [11.8, 322.0], [11.9, 322.0], [12.0, 322.0], [12.1, 322.0], [12.2, 322.0], [12.3, 322.0], [12.4, 322.0], [12.5, 322.0], [12.6, 322.0], [12.7, 322.0], [12.8, 323.0], [12.9, 323.0], [13.0, 323.0], [13.1, 323.0], [13.2, 323.0], [13.3, 323.0], [13.4, 323.0], [13.5, 323.0], [13.6, 323.0], [13.7, 323.0], [13.8, 323.0], [13.9, 323.0], [14.0, 323.0], [14.1, 323.0], [14.2, 324.0], [14.3, 324.0], [14.4, 324.0], [14.5, 324.0], [14.6, 324.0], [14.7, 324.0], [14.8, 324.0], [14.9, 324.0], [15.0, 324.0], [15.1, 324.0], [15.2, 324.0], [15.3, 324.0], [15.4, 324.0], [15.5, 325.0], [15.6, 325.0], [15.7, 325.0], [15.8, 325.0], [15.9, 325.0], [16.0, 325.0], [16.1, 325.0], [16.2, 325.0], [16.3, 325.0], [16.4, 325.0], [16.5, 325.0], [16.6, 325.0], [16.7, 325.0], [16.8, 326.0], [16.9, 326.0], [17.0, 326.0], [17.1, 326.0], [17.2, 326.0], [17.3, 326.0], [17.4, 326.0], [17.5, 326.0], [17.6, 326.0], [17.7, 326.0], [17.8, 326.0], [17.9, 326.0], [18.0, 326.0], [18.1, 326.0], [18.2, 327.0], [18.3, 327.0], [18.4, 327.0], [18.5, 327.0], [18.6, 327.0], [18.7, 327.0], [18.8, 327.0], [18.9, 327.0], [19.0, 327.0], [19.1, 327.0], [19.2, 327.0], [19.3, 327.0], [19.4, 328.0], [19.5, 328.0], [19.6, 328.0], [19.7, 328.0], [19.8, 328.0], [19.9, 328.0], [20.0, 328.0], [20.1, 328.0], [20.2, 328.0], [20.3, 328.0], [20.4, 328.0], [20.5, 328.0], [20.6, 328.0], [20.7, 328.0], [20.8, 329.0], [20.9, 329.0], [21.0, 329.0], [21.1, 329.0], [21.2, 329.0], [21.3, 329.0], [21.4, 329.0], [21.5, 329.0], [21.6, 329.0], [21.7, 329.0], [21.8, 329.0], [21.9, 329.0], [22.0, 329.0], [22.1, 329.0], [22.2, 329.0], [22.3, 330.0], [22.4, 330.0], [22.5, 330.0], [22.6, 330.0], [22.7, 330.0], [22.8, 330.0], [22.9, 330.0], [23.0, 330.0], [23.1, 330.0], [23.2, 330.0], [23.3, 330.0], [23.4, 330.0], [23.5, 330.0], [23.6, 330.0], [23.7, 330.0], [23.8, 330.0], [23.9, 330.0], [24.0, 331.0], [24.1, 331.0], [24.2, 331.0], [24.3, 331.0], [24.4, 331.0], [24.5, 331.0], [24.6, 331.0], [24.7, 331.0], [24.8, 331.0], [24.9, 331.0], [25.0, 331.0], [25.1, 331.0], [25.2, 331.0], [25.3, 331.0], [25.4, 331.0], [25.5, 332.0], [25.6, 332.0], [25.7, 332.0], [25.8, 332.0], [25.9, 332.0], [26.0, 332.0], [26.1, 332.0], [26.2, 332.0], [26.3, 332.0], [26.4, 332.0], [26.5, 332.0], [26.6, 332.0], [26.7, 332.0], [26.8, 332.0], [26.9, 332.0], [27.0, 333.0], [27.1, 333.0], [27.2, 333.0], [27.3, 333.0], [27.4, 333.0], [27.5, 333.0], [27.6, 333.0], [27.7, 333.0], [27.8, 333.0], [27.9, 333.0], [28.0, 333.0], [28.1, 333.0], [28.2, 333.0], [28.3, 333.0], [28.4, 334.0], [28.5, 334.0], [28.6, 334.0], [28.7, 334.0], [28.8, 334.0], [28.9, 334.0], [29.0, 334.0], [29.1, 334.0], [29.2, 334.0], [29.3, 334.0], [29.4, 334.0], [29.5, 334.0], [29.6, 334.0], [29.7, 334.0], [29.8, 334.0], [29.9, 334.0], [30.0, 334.0], [30.1, 335.0], [30.2, 335.0], [30.3, 335.0], [30.4, 335.0], [30.5, 335.0], [30.6, 335.0], [30.7, 335.0], [30.8, 335.0], [30.9, 335.0], [31.0, 335.0], [31.1, 335.0], [31.2, 335.0], [31.3, 335.0], [31.4, 335.0], [31.5, 335.0], [31.6, 335.0], [31.7, 335.0], [31.8, 336.0], [31.9, 336.0], [32.0, 336.0], [32.1, 336.0], [32.2, 336.0], [32.3, 336.0], [32.4, 336.0], [32.5, 336.0], [32.6, 336.0], [32.7, 336.0], [32.8, 336.0], [32.9, 336.0], [33.0, 336.0], [33.1, 336.0], [33.2, 336.0], [33.3, 336.0], [33.4, 336.0], [33.5, 336.0], [33.6, 337.0], [33.7, 337.0], [33.8, 337.0], [33.9, 337.0], [34.0, 337.0], [34.1, 337.0], [34.2, 337.0], [34.3, 337.0], [34.4, 337.0], [34.5, 337.0], [34.6, 337.0], [34.7, 337.0], [34.8, 337.0], [34.9, 337.0], [35.0, 338.0], [35.1, 338.0], [35.2, 338.0], [35.3, 338.0], [35.4, 338.0], [35.5, 338.0], [35.6, 338.0], [35.7, 338.0], [35.8, 338.0], [35.9, 338.0], [36.0, 338.0], [36.1, 338.0], [36.2, 338.0], [36.3, 338.0], [36.4, 338.0], [36.5, 339.0], [36.6, 339.0], [36.7, 339.0], [36.8, 339.0], [36.9, 339.0], [37.0, 339.0], [37.1, 339.0], [37.2, 339.0], [37.3, 339.0], [37.4, 339.0], [37.5, 339.0], [37.6, 339.0], [37.7, 339.0], [37.8, 339.0], [37.9, 339.0], [38.0, 339.0], [38.1, 340.0], [38.2, 340.0], [38.3, 340.0], [38.4, 340.0], [38.5, 340.0], [38.6, 340.0], [38.7, 340.0], [38.8, 340.0], [38.9, 340.0], [39.0, 340.0], [39.1, 340.0], [39.2, 340.0], [39.3, 340.0], [39.4, 340.0], [39.5, 340.0], [39.6, 341.0], [39.7, 341.0], [39.8, 341.0], [39.9, 341.0], [40.0, 341.0], [40.1, 341.0], [40.2, 341.0], [40.3, 341.0], [40.4, 341.0], [40.5, 341.0], [40.6, 341.0], [40.7, 341.0], [40.8, 341.0], [40.9, 341.0], [41.0, 341.0], [41.1, 342.0], [41.2, 342.0], [41.3, 342.0], [41.4, 342.0], [41.5, 342.0], [41.6, 342.0], [41.7, 342.0], [41.8, 342.0], [41.9, 342.0], [42.0, 342.0], [42.1, 342.0], [42.2, 342.0], [42.3, 342.0], [42.4, 342.0], [42.5, 342.0], [42.6, 342.0], [42.7, 343.0], [42.8, 343.0], [42.9, 343.0], [43.0, 343.0], [43.1, 343.0], [43.2, 343.0], [43.3, 343.0], [43.4, 343.0], [43.5, 343.0], [43.6, 343.0], [43.7, 343.0], [43.8, 343.0], [43.9, 343.0], [44.0, 344.0], [44.1, 344.0], [44.2, 344.0], [44.3, 344.0], [44.4, 344.0], [44.5, 344.0], [44.6, 344.0], [44.7, 344.0], [44.8, 344.0], [44.9, 344.0], [45.0, 344.0], [45.1, 344.0], [45.2, 344.0], [45.3, 344.0], [45.4, 344.0], [45.5, 344.0], [45.6, 345.0], [45.7, 345.0], [45.8, 345.0], [45.9, 345.0], [46.0, 345.0], [46.1, 345.0], [46.2, 345.0], [46.3, 345.0], [46.4, 345.0], [46.5, 345.0], [46.6, 345.0], [46.7, 346.0], [46.8, 346.0], [46.9, 346.0], [47.0, 346.0], [47.1, 346.0], [47.2, 346.0], [47.3, 346.0], [47.4, 346.0], [47.5, 346.0], [47.6, 346.0], [47.7, 346.0], [47.8, 346.0], [47.9, 346.0], [48.0, 346.0], [48.1, 346.0], [48.2, 347.0], [48.3, 347.0], [48.4, 347.0], [48.5, 347.0], [48.6, 347.0], [48.7, 347.0], [48.8, 347.0], [48.9, 347.0], [49.0, 347.0], [49.1, 347.0], [49.2, 347.0], [49.3, 347.0], [49.4, 347.0], [49.5, 348.0], [49.6, 348.0], [49.7, 348.0], [49.8, 348.0], [49.9, 348.0], [50.0, 348.0], [50.1, 348.0], [50.2, 348.0], [50.3, 348.0], [50.4, 348.0], [50.5, 348.0], [50.6, 348.0], [50.7, 348.0], [50.8, 348.0], [50.9, 349.0], [51.0, 349.0], [51.1, 349.0], [51.2, 349.0], [51.3, 349.0], [51.4, 349.0], [51.5, 349.0], [51.6, 349.0], [51.7, 349.0], [51.8, 349.0], [51.9, 349.0], [52.0, 349.0], [52.1, 349.0], [52.2, 350.0], [52.3, 350.0], [52.4, 350.0], [52.5, 350.0], [52.6, 350.0], [52.7, 350.0], [52.8, 350.0], [52.9, 350.0], [53.0, 350.0], [53.1, 350.0], [53.2, 350.0], [53.3, 351.0], [53.4, 351.0], [53.5, 351.0], [53.6, 351.0], [53.7, 351.0], [53.8, 351.0], [53.9, 351.0], [54.0, 351.0], [54.1, 351.0], [54.2, 351.0], [54.3, 351.0], [54.4, 351.0], [54.5, 352.0], [54.6, 352.0], [54.7, 352.0], [54.8, 352.0], [54.9, 352.0], [55.0, 352.0], [55.1, 352.0], [55.2, 352.0], [55.3, 352.0], [55.4, 352.0], [55.5, 352.0], [55.6, 352.0], [55.7, 352.0], [55.8, 352.0], [55.9, 353.0], [56.0, 353.0], [56.1, 353.0], [56.2, 353.0], [56.3, 353.0], [56.4, 353.0], [56.5, 353.0], [56.6, 353.0], [56.7, 353.0], [56.8, 353.0], [56.9, 353.0], [57.0, 353.0], [57.1, 354.0], [57.2, 354.0], [57.3, 354.0], [57.4, 354.0], [57.5, 354.0], [57.6, 354.0], [57.7, 354.0], [57.8, 354.0], [57.9, 354.0], [58.0, 354.0], [58.1, 354.0], [58.2, 354.0], [58.3, 354.0], [58.4, 354.0], [58.5, 355.0], [58.6, 355.0], [58.7, 355.0], [58.8, 355.0], [58.9, 355.0], [59.0, 355.0], [59.1, 355.0], [59.2, 355.0], [59.3, 355.0], [59.4, 355.0], [59.5, 355.0], [59.6, 356.0], [59.7, 356.0], [59.8, 356.0], [59.9, 356.0], [60.0, 356.0], [60.1, 356.0], [60.2, 356.0], [60.3, 356.0], [60.4, 356.0], [60.5, 357.0], [60.6, 357.0], [60.7, 357.0], [60.8, 357.0], [60.9, 357.0], [61.0, 357.0], [61.1, 357.0], [61.2, 357.0], [61.3, 357.0], [61.4, 357.0], [61.5, 357.0], [61.6, 358.0], [61.7, 358.0], [61.8, 358.0], [61.9, 358.0], [62.0, 358.0], [62.1, 358.0], [62.2, 358.0], [62.3, 358.0], [62.4, 358.0], [62.5, 358.0], [62.6, 358.0], [62.7, 359.0], [62.8, 359.0], [62.9, 359.0], [63.0, 359.0], [63.1, 359.0], [63.2, 359.0], [63.3, 359.0], [63.4, 360.0], [63.5, 360.0], [63.6, 360.0], [63.7, 360.0], [63.8, 360.0], [63.9, 360.0], [64.0, 360.0], [64.1, 360.0], [64.2, 360.0], [64.3, 360.0], [64.4, 360.0], [64.5, 360.0], [64.6, 361.0], [64.7, 361.0], [64.8, 361.0], [64.9, 361.0], [65.0, 361.0], [65.1, 361.0], [65.2, 362.0], [65.3, 362.0], [65.4, 362.0], [65.5, 362.0], [65.6, 362.0], [65.7, 362.0], [65.8, 362.0], [65.9, 362.0], [66.0, 363.0], [66.1, 363.0], [66.2, 363.0], [66.3, 363.0], [66.4, 363.0], [66.5, 363.0], [66.6, 363.0], [66.7, 363.0], [66.8, 364.0], [66.9, 364.0], [67.0, 364.0], [67.1, 364.0], [67.2, 364.0], [67.3, 364.0], [67.4, 364.0], [67.5, 364.0], [67.6, 364.0], [67.7, 364.0], [67.8, 365.0], [67.9, 365.0], [68.0, 365.0], [68.1, 365.0], [68.2, 365.0], [68.3, 365.0], [68.4, 365.0], [68.5, 365.0], [68.6, 366.0], [68.7, 366.0], [68.8, 366.0], [68.9, 366.0], [69.0, 366.0], [69.1, 366.0], [69.2, 366.0], [69.3, 366.0], [69.4, 366.0], [69.5, 367.0], [69.6, 367.0], [69.7, 367.0], [69.8, 367.0], [69.9, 367.0], [70.0, 367.0], [70.1, 367.0], [70.2, 368.0], [70.3, 368.0], [70.4, 368.0], [70.5, 368.0], [70.6, 368.0], [70.7, 368.0], [70.8, 369.0], [70.9, 369.0], [71.0, 369.0], [71.1, 369.0], [71.2, 369.0], [71.3, 369.0], [71.4, 370.0], [71.5, 370.0], [71.6, 370.0], [71.7, 370.0], [71.8, 370.0], [71.9, 370.0], [72.0, 370.0], [72.1, 370.0], [72.2, 371.0], [72.3, 371.0], [72.4, 371.0], [72.5, 371.0], [72.6, 371.0], [72.7, 371.0], [72.8, 372.0], [72.9, 372.0], [73.0, 372.0], [73.1, 372.0], [73.2, 372.0], [73.3, 372.0], [73.4, 372.0], [73.5, 372.0], [73.6, 373.0], [73.7, 373.0], [73.8, 373.0], [73.9, 373.0], [74.0, 373.0], [74.1, 373.0], [74.2, 374.0], [74.3, 374.0], [74.4, 374.0], [74.5, 374.0], [74.6, 374.0], [74.7, 374.0], [74.8, 374.0], [74.9, 375.0], [75.0, 375.0], [75.1, 375.0], [75.2, 375.0], [75.3, 375.0], [75.4, 375.0], [75.5, 376.0], [75.6, 376.0], [75.7, 376.0], [75.8, 376.0], [75.9, 376.0], [76.0, 376.0], [76.1, 376.0], [76.2, 377.0], [76.3, 377.0], [76.4, 377.0], [76.5, 377.0], [76.6, 377.0], [76.7, 377.0], [76.8, 378.0], [76.9, 378.0], [77.0, 378.0], [77.1, 378.0], [77.2, 378.0], [77.3, 378.0], [77.4, 379.0], [77.5, 379.0], [77.6, 379.0], [77.7, 379.0], [77.8, 379.0], [77.9, 380.0], [78.0, 380.0], [78.1, 380.0], [78.2, 381.0], [78.3, 381.0], [78.4, 381.0], [78.5, 382.0], [78.6, 382.0], [78.7, 382.0], [78.8, 382.0], [78.9, 382.0], [79.0, 382.0], [79.1, 383.0], [79.2, 383.0], [79.3, 383.0], [79.4, 383.0], [79.5, 384.0], [79.6, 384.0], [79.7, 384.0], [79.8, 385.0], [79.9, 385.0], [80.0, 385.0], [80.1, 385.0], [80.2, 385.0], [80.3, 385.0], [80.4, 385.0], [80.5, 386.0], [80.6, 386.0], [80.7, 386.0], [80.8, 386.0], [80.9, 387.0], [81.0, 387.0], [81.1, 387.0], [81.2, 387.0], [81.3, 388.0], [81.4, 388.0], [81.5, 388.0], [81.6, 389.0], [81.7, 389.0], [81.8, 389.0], [81.9, 389.0], [82.0, 389.0], [82.1, 390.0], [82.2, 390.0], [82.3, 390.0], [82.4, 390.0], [82.5, 390.0], [82.6, 391.0], [82.7, 391.0], [82.8, 391.0], [82.9, 391.0], [83.0, 391.0], [83.1, 392.0], [83.2, 392.0], [83.3, 392.0], [83.4, 392.0], [83.5, 392.0], [83.6, 393.0], [83.7, 393.0], [83.8, 393.0], [83.9, 393.0], [84.0, 394.0], [84.1, 394.0], [84.2, 394.0], [84.3, 394.0], [84.4, 395.0], [84.5, 395.0], [84.6, 395.0], [84.7, 396.0], [84.8, 396.0], [84.9, 396.0], [85.0, 396.0], [85.1, 397.0], [85.2, 397.0], [85.3, 397.0], [85.4, 398.0], [85.5, 398.0], [85.6, 398.0], [85.7, 398.0], [85.8, 398.0], [85.9, 399.0], [86.0, 400.0], [86.1, 400.0], [86.2, 400.0], [86.3, 400.0], [86.4, 401.0], [86.5, 401.0], [86.6, 401.0], [86.7, 402.0], [86.8, 402.0], [86.9, 402.0], [87.0, 402.0], [87.1, 403.0], [87.2, 403.0], [87.3, 404.0], [87.4, 404.0], [87.5, 405.0], [87.6, 405.0], [87.7, 406.0], [87.8, 406.0], [87.9, 406.0], [88.0, 406.0], [88.1, 407.0], [88.2, 407.0], [88.3, 408.0], [88.4, 408.0], [88.5, 408.0], [88.6, 409.0], [88.7, 409.0], [88.8, 409.0], [88.9, 409.0], [89.0, 410.0], [89.1, 410.0], [89.2, 411.0], [89.3, 411.0], [89.4, 412.0], [89.5, 412.0], [89.6, 413.0], [89.7, 413.0], [89.8, 414.0], [89.9, 415.0], [90.0, 417.0], [90.1, 417.0], [90.2, 418.0], [90.3, 419.0], [90.4, 420.0], [90.5, 421.0], [90.6, 422.0], [90.7, 422.0], [90.8, 423.0], [90.9, 424.0], [91.0, 425.0], [91.1, 426.0], [91.2, 427.0], [91.3, 428.0], [91.4, 429.0], [91.5, 429.0], [91.6, 431.0], [91.7, 431.0], [91.8, 432.0], [91.9, 433.0], [92.0, 433.0], [92.1, 434.0], [92.2, 434.0], [92.3, 435.0], [92.4, 435.0], [92.5, 436.0], [92.6, 436.0], [92.7, 437.0], [92.8, 438.0], [92.9, 438.0], [93.0, 439.0], [93.1, 439.0], [93.2, 440.0], [93.3, 441.0], [93.4, 443.0], [93.5, 444.0], [93.6, 445.0], [93.7, 446.0], [93.8, 447.0], [93.9, 448.0], [94.0, 449.0], [94.1, 450.0], [94.2, 451.0], [94.3, 452.0], [94.4, 452.0], [94.5, 453.0], [94.6, 454.0], [94.7, 454.0], [94.8, 454.0], [94.9, 455.0], [95.0, 456.0], [95.1, 458.0], [95.2, 460.0], [95.3, 461.0], [95.4, 461.0], [95.5, 462.0], [95.6, 463.0], [95.7, 463.0], [95.8, 464.0], [95.9, 466.0], [96.0, 467.0], [96.1, 467.0], [96.2, 468.0], [96.3, 469.0], [96.4, 469.0], [96.5, 470.0], [96.6, 471.0], [96.7, 473.0], [96.8, 474.0], [96.9, 477.0], [97.0, 478.0], [97.1, 479.0], [97.2, 480.0], [97.3, 481.0], [97.4, 483.0], [97.5, 484.0], [97.6, 485.0], [97.7, 487.0], [97.8, 489.0], [97.9, 491.0], [98.0, 492.0], [98.1, 493.0], [98.2, 499.0], [98.3, 501.0], [98.4, 502.0], [98.5, 507.0], [98.6, 510.0], [98.7, 514.0], [98.8, 524.0], [98.9, 529.0], [99.0, 545.0], [99.1, 561.0], [99.2, 567.0], [99.3, 586.0], [99.4, 603.0], [99.5, 645.0], [99.6, 665.0], [99.7, 697.0], [99.8, 724.0], [99.9, 803.0], [100.0, 1098.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[0.0, 297.0], [0.1, 300.0], [0.2, 301.0], [0.3, 302.0], [0.4, 303.0], [0.5, 303.0], [0.6, 304.0], [0.7, 305.0], [0.8, 305.0], [0.9, 306.0], [1.0, 306.0], [1.1, 306.0], [1.2, 306.0], [1.3, 307.0], [1.4, 307.0], [1.5, 307.0], [1.6, 308.0], [1.7, 308.0], [1.8, 308.0], [1.9, 308.0], [2.0, 309.0], [2.1, 309.0], [2.2, 309.0], [2.3, 310.0], [2.4, 310.0], [2.5, 310.0], [2.6, 310.0], [2.7, 311.0], [2.8, 311.0], [2.9, 311.0], [3.0, 311.0], [3.1, 311.0], [3.2, 312.0], [3.3, 312.0], [3.4, 312.0], [3.5, 312.0], [3.6, 312.0], [3.7, 312.0], [3.8, 313.0], [3.9, 313.0], [4.0, 313.0], [4.1, 313.0], [4.2, 313.0], [4.3, 313.0], [4.4, 313.0], [4.5, 313.0], [4.6, 313.0], [4.7, 314.0], [4.8, 314.0], [4.9, 314.0], [5.0, 314.0], [5.1, 314.0], [5.2, 314.0], [5.3, 314.0], [5.4, 315.0], [5.5, 315.0], [5.6, 315.0], [5.7, 315.0], [5.8, 315.0], [5.9, 315.0], [6.0, 315.0], [6.1, 315.0], [6.2, 315.0], [6.3, 315.0], [6.4, 316.0], [6.5, 316.0], [6.6, 316.0], [6.7, 316.0], [6.8, 316.0], [6.9, 316.0], [7.0, 316.0], [7.1, 316.0], [7.2, 316.0], [7.3, 317.0], [7.4, 317.0], [7.5, 317.0], [7.6, 317.0], [7.7, 317.0], [7.8, 317.0], [7.9, 317.0], [8.0, 317.0], [8.1, 317.0], [8.2, 318.0], [8.3, 318.0], [8.4, 318.0], [8.5, 318.0], [8.6, 318.0], [8.7, 318.0], [8.8, 318.0], [8.9, 318.0], [9.0, 318.0], [9.1, 318.0], [9.2, 318.0], [9.3, 319.0], [9.4, 319.0], [9.5, 319.0], [9.6, 319.0], [9.7, 319.0], [9.8, 319.0], [9.9, 319.0], [10.0, 320.0], [10.1, 320.0], [10.2, 320.0], [10.3, 320.0], [10.4, 320.0], [10.5, 320.0], [10.6, 320.0], [10.7, 320.0], [10.8, 320.0], [10.9, 320.0], [11.0, 320.0], [11.1, 320.0], [11.2, 320.0], [11.3, 321.0], [11.4, 321.0], [11.5, 321.0], [11.6, 321.0], [11.7, 321.0], [11.8, 321.0], [11.9, 321.0], [12.0, 321.0], [12.1, 321.0], [12.2, 321.0], [12.3, 322.0], [12.4, 322.0], [12.5, 322.0], [12.6, 322.0], [12.7, 322.0], [12.8, 322.0], [12.9, 322.0], [13.0, 322.0], [13.1, 322.0], [13.2, 322.0], [13.3, 322.0], [13.4, 322.0], [13.5, 322.0], [13.6, 322.0], [13.7, 322.0], [13.8, 322.0], [13.9, 322.0], [14.0, 322.0], [14.1, 322.0], [14.2, 323.0], [14.3, 323.0], [14.4, 323.0], [14.5, 323.0], [14.6, 323.0], [14.7, 323.0], [14.8, 323.0], [14.9, 323.0], [15.0, 323.0], [15.1, 323.0], [15.2, 323.0], [15.3, 323.0], [15.4, 324.0], [15.5, 324.0], [15.6, 324.0], [15.7, 324.0], [15.8, 324.0], [15.9, 324.0], [16.0, 324.0], [16.1, 324.0], [16.2, 324.0], [16.3, 324.0], [16.4, 324.0], [16.5, 324.0], [16.6, 325.0], [16.7, 325.0], [16.8, 325.0], [16.9, 325.0], [17.0, 325.0], [17.1, 325.0], [17.2, 325.0], [17.3, 325.0], [17.4, 325.0], [17.5, 325.0], [17.6, 325.0], [17.7, 326.0], [17.8, 326.0], [17.9, 326.0], [18.0, 326.0], [18.1, 326.0], [18.2, 326.0], [18.3, 326.0], [18.4, 326.0], [18.5, 326.0], [18.6, 326.0], [18.7, 326.0], [18.8, 326.0], [18.9, 326.0], [19.0, 326.0], [19.1, 327.0], [19.2, 327.0], [19.3, 327.0], [19.4, 327.0], [19.5, 327.0], [19.6, 327.0], [19.7, 327.0], [19.8, 327.0], [19.9, 327.0], [20.0, 327.0], [20.1, 327.0], [20.2, 327.0], [20.3, 327.0], [20.4, 327.0], [20.5, 327.0], [20.6, 328.0], [20.7, 328.0], [20.8, 328.0], [20.9, 328.0], [21.0, 328.0], [21.1, 328.0], [21.2, 328.0], [21.3, 328.0], [21.4, 328.0], [21.5, 328.0], [21.6, 328.0], [21.7, 328.0], [21.8, 328.0], [21.9, 328.0], [22.0, 328.0], [22.1, 328.0], [22.2, 328.0], [22.3, 328.0], [22.4, 329.0], [22.5, 329.0], [22.6, 329.0], [22.7, 329.0], [22.8, 329.0], [22.9, 329.0], [23.0, 329.0], [23.1, 329.0], [23.2, 329.0], [23.3, 329.0], [23.4, 329.0], [23.5, 329.0], [23.6, 329.0], [23.7, 329.0], [23.8, 329.0], [23.9, 329.0], [24.0, 330.0], [24.1, 330.0], [24.2, 330.0], [24.3, 330.0], [24.4, 330.0], [24.5, 330.0], [24.6, 330.0], [24.7, 330.0], [24.8, 330.0], [24.9, 330.0], [25.0, 330.0], [25.1, 330.0], [25.2, 330.0], [25.3, 330.0], [25.4, 330.0], [25.5, 330.0], [25.6, 331.0], [25.7, 331.0], [25.8, 331.0], [25.9, 331.0], [26.0, 331.0], [26.1, 331.0], [26.2, 331.0], [26.3, 331.0], [26.4, 331.0], [26.5, 331.0], [26.6, 331.0], [26.7, 331.0], [26.8, 331.0], [26.9, 331.0], [27.0, 331.0], [27.1, 331.0], [27.2, 332.0], [27.3, 332.0], [27.4, 332.0], [27.5, 332.0], [27.6, 332.0], [27.7, 332.0], [27.8, 332.0], [27.9, 332.0], [28.0, 332.0], [28.1, 332.0], [28.2, 332.0], [28.3, 332.0], [28.4, 332.0], [28.5, 332.0], [28.6, 332.0], [28.7, 332.0], [28.8, 332.0], [28.9, 332.0], [29.0, 332.0], [29.1, 332.0], [29.2, 333.0], [29.3, 333.0], [29.4, 333.0], [29.5, 333.0], [29.6, 333.0], [29.7, 333.0], [29.8, 333.0], [29.9, 333.0], [30.0, 333.0], [30.1, 333.0], [30.2, 333.0], [30.3, 333.0], [30.4, 333.0], [30.5, 333.0], [30.6, 333.0], [30.7, 334.0], [30.8, 334.0], [30.9, 334.0], [31.0, 334.0], [31.1, 334.0], [31.2, 334.0], [31.3, 334.0], [31.4, 334.0], [31.5, 334.0], [31.6, 334.0], [31.7, 334.0], [31.8, 334.0], [31.9, 334.0], [32.0, 334.0], [32.1, 334.0], [32.2, 335.0], [32.3, 335.0], [32.4, 335.0], [32.5, 335.0], [32.6, 335.0], [32.7, 335.0], [32.8, 335.0], [32.9, 335.0], [33.0, 335.0], [33.1, 335.0], [33.2, 335.0], [33.3, 335.0], [33.4, 335.0], [33.5, 335.0], [33.6, 335.0], [33.7, 336.0], [33.8, 336.0], [33.9, 336.0], [34.0, 336.0], [34.1, 336.0], [34.2, 336.0], [34.3, 336.0], [34.4, 336.0], [34.5, 336.0], [34.6, 336.0], [34.7, 336.0], [34.8, 336.0], [34.9, 336.0], [35.0, 336.0], [35.1, 336.0], [35.2, 336.0], [35.3, 336.0], [35.4, 337.0], [35.5, 337.0], [35.6, 337.0], [35.7, 337.0], [35.8, 337.0], [35.9, 337.0], [36.0, 337.0], [36.1, 337.0], [36.2, 337.0], [36.3, 337.0], [36.4, 337.0], [36.5, 337.0], [36.6, 337.0], [36.7, 338.0], [36.8, 338.0], [36.9, 338.0], [37.0, 338.0], [37.1, 338.0], [37.2, 338.0], [37.3, 338.0], [37.4, 338.0], [37.5, 338.0], [37.6, 338.0], [37.7, 338.0], [37.8, 338.0], [37.9, 338.0], [38.0, 338.0], [38.1, 338.0], [38.2, 338.0], [38.3, 339.0], [38.4, 339.0], [38.5, 339.0], [38.6, 339.0], [38.7, 339.0], [38.8, 339.0], [38.9, 339.0], [39.0, 339.0], [39.1, 339.0], [39.2, 339.0], [39.3, 339.0], [39.4, 339.0], [39.5, 339.0], [39.6, 339.0], [39.7, 339.0], [39.8, 340.0], [39.9, 340.0], [40.0, 340.0], [40.1, 340.0], [40.2, 340.0], [40.3, 340.0], [40.4, 340.0], [40.5, 340.0], [40.6, 340.0], [40.7, 340.0], [40.8, 340.0], [40.9, 340.0], [41.0, 340.0], [41.1, 340.0], [41.2, 340.0], [41.3, 340.0], [41.4, 340.0], [41.5, 341.0], [41.6, 341.0], [41.7, 341.0], [41.8, 341.0], [41.9, 341.0], [42.0, 341.0], [42.1, 341.0], [42.2, 341.0], [42.3, 341.0], [42.4, 341.0], [42.5, 341.0], [42.6, 341.0], [42.7, 341.0], [42.8, 341.0], [42.9, 342.0], [43.0, 342.0], [43.1, 342.0], [43.2, 342.0], [43.3, 342.0], [43.4, 342.0], [43.5, 342.0], [43.6, 342.0], [43.7, 342.0], [43.8, 342.0], [43.9, 342.0], [44.0, 342.0], [44.1, 342.0], [44.2, 342.0], [44.3, 342.0], [44.4, 342.0], [44.5, 343.0], [44.6, 343.0], [44.7, 343.0], [44.8, 343.0], [44.9, 343.0], [45.0, 343.0], [45.1, 343.0], [45.2, 343.0], [45.3, 343.0], [45.4, 343.0], [45.5, 343.0], [45.6, 343.0], [45.7, 343.0], [45.8, 343.0], [45.9, 344.0], [46.0, 344.0], [46.1, 344.0], [46.2, 344.0], [46.3, 344.0], [46.4, 344.0], [46.5, 344.0], [46.6, 344.0], [46.7, 344.0], [46.8, 344.0], [46.9, 345.0], [47.0, 345.0], [47.1, 345.0], [47.2, 345.0], [47.3, 345.0], [47.4, 345.0], [47.5, 345.0], [47.6, 345.0], [47.7, 345.0], [47.8, 345.0], [47.9, 346.0], [48.0, 346.0], [48.1, 346.0], [48.2, 346.0], [48.3, 346.0], [48.4, 346.0], [48.5, 346.0], [48.6, 346.0], [48.7, 346.0], [48.8, 346.0], [48.9, 346.0], [49.0, 346.0], [49.1, 346.0], [49.2, 346.0], [49.3, 346.0], [49.4, 347.0], [49.5, 347.0], [49.6, 347.0], [49.7, 347.0], [49.8, 347.0], [49.9, 347.0], [50.0, 347.0], [50.1, 347.0], [50.2, 347.0], [50.3, 347.0], [50.4, 347.0], [50.5, 348.0], [50.6, 348.0], [50.7, 348.0], [50.8, 348.0], [50.9, 348.0], [51.0, 348.0], [51.1, 348.0], [51.2, 348.0], [51.3, 348.0], [51.4, 348.0], [51.5, 348.0], [51.6, 348.0], [51.7, 348.0], [51.8, 349.0], [51.9, 349.0], [52.0, 349.0], [52.1, 349.0], [52.2, 349.0], [52.3, 349.0], [52.4, 349.0], [52.5, 349.0], [52.6, 349.0], [52.7, 349.0], [52.8, 349.0], [52.9, 349.0], [53.0, 349.0], [53.1, 350.0], [53.2, 350.0], [53.3, 350.0], [53.4, 350.0], [53.5, 350.0], [53.6, 350.0], [53.7, 350.0], [53.8, 350.0], [53.9, 350.0], [54.0, 350.0], [54.1, 350.0], [54.2, 350.0], [54.3, 351.0], [54.4, 351.0], [54.5, 351.0], [54.6, 351.0], [54.7, 351.0], [54.8, 351.0], [54.9, 351.0], [55.0, 351.0], [55.1, 351.0], [55.2, 351.0], [55.3, 351.0], [55.4, 351.0], [55.5, 351.0], [55.6, 352.0], [55.7, 352.0], [55.8, 352.0], [55.9, 352.0], [56.0, 352.0], [56.1, 352.0], [56.2, 352.0], [56.3, 352.0], [56.4, 352.0], [56.5, 352.0], [56.6, 352.0], [56.7, 352.0], [56.8, 352.0], [56.9, 353.0], [57.0, 353.0], [57.1, 353.0], [57.2, 353.0], [57.3, 353.0], [57.4, 353.0], [57.5, 353.0], [57.6, 353.0], [57.7, 353.0], [57.8, 354.0], [57.9, 354.0], [58.0, 354.0], [58.1, 354.0], [58.2, 354.0], [58.3, 354.0], [58.4, 354.0], [58.5, 354.0], [58.6, 354.0], [58.7, 354.0], [58.8, 354.0], [58.9, 354.0], [59.0, 355.0], [59.1, 355.0], [59.2, 355.0], [59.3, 355.0], [59.4, 355.0], [59.5, 355.0], [59.6, 355.0], [59.7, 355.0], [59.8, 355.0], [59.9, 355.0], [60.0, 355.0], [60.1, 356.0], [60.2, 356.0], [60.3, 356.0], [60.4, 356.0], [60.5, 356.0], [60.6, 356.0], [60.7, 356.0], [60.8, 356.0], [60.9, 356.0], [61.0, 356.0], [61.1, 356.0], [61.2, 356.0], [61.3, 357.0], [61.4, 357.0], [61.5, 357.0], [61.6, 357.0], [61.7, 357.0], [61.8, 357.0], [61.9, 357.0], [62.0, 357.0], [62.1, 357.0], [62.2, 357.0], [62.3, 358.0], [62.4, 358.0], [62.5, 358.0], [62.6, 358.0], [62.7, 358.0], [62.8, 358.0], [62.9, 358.0], [63.0, 358.0], [63.1, 358.0], [63.2, 358.0], [63.3, 359.0], [63.4, 359.0], [63.5, 359.0], [63.6, 359.0], [63.7, 359.0], [63.8, 359.0], [63.9, 359.0], [64.0, 360.0], [64.1, 360.0], [64.2, 360.0], [64.3, 360.0], [64.4, 360.0], [64.5, 360.0], [64.6, 360.0], [64.7, 360.0], [64.8, 360.0], [64.9, 361.0], [65.0, 361.0], [65.1, 361.0], [65.2, 361.0], [65.3, 361.0], [65.4, 361.0], [65.5, 361.0], [65.6, 361.0], [65.7, 362.0], [65.8, 362.0], [65.9, 362.0], [66.0, 362.0], [66.1, 362.0], [66.2, 362.0], [66.3, 362.0], [66.4, 362.0], [66.5, 362.0], [66.6, 363.0], [66.7, 363.0], [66.8, 363.0], [66.9, 363.0], [67.0, 363.0], [67.1, 364.0], [67.2, 364.0], [67.3, 364.0], [67.4, 364.0], [67.5, 364.0], [67.6, 364.0], [67.7, 364.0], [67.8, 364.0], [67.9, 365.0], [68.0, 365.0], [68.1, 365.0], [68.2, 365.0], [68.3, 365.0], [68.4, 365.0], [68.5, 365.0], [68.6, 365.0], [68.7, 366.0], [68.8, 366.0], [68.9, 366.0], [69.0, 366.0], [69.1, 366.0], [69.2, 366.0], [69.3, 366.0], [69.4, 366.0], [69.5, 366.0], [69.6, 366.0], [69.7, 366.0], [69.8, 367.0], [69.9, 367.0], [70.0, 367.0], [70.1, 367.0], [70.2, 367.0], [70.3, 367.0], [70.4, 367.0], [70.5, 367.0], [70.6, 368.0], [70.7, 368.0], [70.8, 368.0], [70.9, 368.0], [71.0, 368.0], [71.1, 368.0], [71.2, 369.0], [71.3, 369.0], [71.4, 369.0], [71.5, 369.0], [71.6, 369.0], [71.7, 370.0], [71.8, 370.0], [71.9, 370.0], [72.0, 370.0], [72.1, 370.0], [72.2, 370.0], [72.3, 370.0], [72.4, 370.0], [72.5, 371.0], [72.6, 371.0], [72.7, 371.0], [72.8, 371.0], [72.9, 371.0], [73.0, 371.0], [73.1, 371.0], [73.2, 371.0], [73.3, 372.0], [73.4, 372.0], [73.5, 372.0], [73.6, 372.0], [73.7, 372.0], [73.8, 373.0], [73.9, 373.0], [74.0, 373.0], [74.1, 373.0], [74.2, 374.0], [74.3, 374.0], [74.4, 374.0], [74.5, 374.0], [74.6, 374.0], [74.7, 375.0], [74.8, 375.0], [74.9, 375.0], [75.0, 375.0], [75.1, 375.0], [75.2, 376.0], [75.3, 376.0], [75.4, 376.0], [75.5, 376.0], [75.6, 376.0], [75.7, 376.0], [75.8, 377.0], [75.9, 377.0], [76.0, 377.0], [76.1, 377.0], [76.2, 378.0], [76.3, 378.0], [76.4, 378.0], [76.5, 378.0], [76.6, 378.0], [76.7, 378.0], [76.8, 378.0], [76.9, 379.0], [77.0, 379.0], [77.1, 379.0], [77.2, 379.0], [77.3, 379.0], [77.4, 379.0], [77.5, 380.0], [77.6, 380.0], [77.7, 380.0], [77.8, 380.0], [77.9, 380.0], [78.0, 380.0], [78.1, 380.0], [78.2, 381.0], [78.3, 381.0], [78.4, 381.0], [78.5, 381.0], [78.6, 382.0], [78.7, 382.0], [78.8, 382.0], [78.9, 383.0], [79.0, 383.0], [79.1, 383.0], [79.2, 383.0], [79.3, 383.0], [79.4, 384.0], [79.5, 384.0], [79.6, 384.0], [79.7, 384.0], [79.8, 385.0], [79.9, 385.0], [80.0, 385.0], [80.1, 385.0], [80.2, 385.0], [80.3, 386.0], [80.4, 386.0], [80.5, 386.0], [80.6, 386.0], [80.7, 386.0], [80.8, 386.0], [80.9, 387.0], [81.0, 387.0], [81.1, 388.0], [81.2, 388.0], [81.3, 388.0], [81.4, 388.0], [81.5, 389.0], [81.6, 389.0], [81.7, 389.0], [81.8, 389.0], [81.9, 390.0], [82.0, 390.0], [82.1, 391.0], [82.2, 391.0], [82.3, 391.0], [82.4, 391.0], [82.5, 391.0], [82.6, 391.0], [82.7, 392.0], [82.8, 392.0], [82.9, 392.0], [83.0, 392.0], [83.1, 392.0], [83.2, 392.0], [83.3, 393.0], [83.4, 393.0], [83.5, 393.0], [83.6, 394.0], [83.7, 394.0], [83.8, 395.0], [83.9, 395.0], [84.0, 396.0], [84.1, 396.0], [84.2, 396.0], [84.3, 396.0], [84.4, 397.0], [84.5, 397.0], [84.6, 397.0], [84.7, 397.0], [84.8, 398.0], [84.9, 398.0], [85.0, 398.0], [85.1, 399.0], [85.2, 399.0], [85.3, 399.0], [85.4, 400.0], [85.5, 400.0], [85.6, 400.0], [85.7, 401.0], [85.8, 401.0], [85.9, 401.0], [86.0, 402.0], [86.1, 402.0], [86.2, 402.0], [86.3, 403.0], [86.4, 403.0], [86.5, 404.0], [86.6, 404.0], [86.7, 404.0], [86.8, 405.0], [86.9, 405.0], [87.0, 405.0], [87.1, 405.0], [87.2, 406.0], [87.3, 406.0], [87.4, 407.0], [87.5, 407.0], [87.6, 407.0], [87.7, 408.0], [87.8, 408.0], [87.9, 408.0], [88.0, 409.0], [88.1, 409.0], [88.2, 409.0], [88.3, 410.0], [88.4, 410.0], [88.5, 411.0], [88.6, 411.0], [88.7, 411.0], [88.8, 412.0], [88.9, 412.0], [89.0, 413.0], [89.1, 414.0], [89.2, 414.0], [89.3, 415.0], [89.4, 416.0], [89.5, 416.0], [89.6, 417.0], [89.7, 418.0], [89.8, 419.0], [89.9, 419.0], [90.0, 419.0], [90.1, 420.0], [90.2, 420.0], [90.3, 421.0], [90.4, 421.0], [90.5, 422.0], [90.6, 422.0], [90.7, 423.0], [90.8, 423.0], [90.9, 424.0], [91.0, 425.0], [91.1, 426.0], [91.2, 426.0], [91.3, 427.0], [91.4, 428.0], [91.5, 429.0], [91.6, 429.0], [91.7, 430.0], [91.8, 431.0], [91.9, 431.0], [92.0, 431.0], [92.1, 432.0], [92.2, 432.0], [92.3, 432.0], [92.4, 433.0], [92.5, 434.0], [92.6, 434.0], [92.7, 434.0], [92.8, 435.0], [92.9, 436.0], [93.0, 436.0], [93.1, 436.0], [93.2, 437.0], [93.3, 437.0], [93.4, 438.0], [93.5, 438.0], [93.6, 439.0], [93.7, 440.0], [93.8, 440.0], [93.9, 442.0], [94.0, 442.0], [94.1, 443.0], [94.2, 444.0], [94.3, 445.0], [94.4, 445.0], [94.5, 446.0], [94.6, 446.0], [94.7, 447.0], [94.8, 448.0], [94.9, 448.0], [95.0, 449.0], [95.1, 450.0], [95.2, 450.0], [95.3, 452.0], [95.4, 454.0], [95.5, 454.0], [95.6, 455.0], [95.7, 455.0], [95.8, 457.0], [95.9, 458.0], [96.0, 458.0], [96.1, 462.0], [96.2, 462.0], [96.3, 464.0], [96.4, 467.0], [96.5, 468.0], [96.6, 469.0], [96.7, 469.0], [96.8, 470.0], [96.9, 471.0], [97.0, 472.0], [97.1, 475.0], [97.2, 478.0], [97.3, 479.0], [97.4, 480.0], [97.5, 481.0], [97.6, 482.0], [97.7, 484.0], [97.8, 484.0], [97.9, 485.0], [98.0, 486.0], [98.1, 488.0], [98.2, 490.0], [98.3, 490.0], [98.4, 493.0], [98.5, 495.0], [98.6, 498.0], [98.7, 499.0], [98.8, 500.0], [98.9, 503.0], [99.0, 508.0], [99.1, 513.0], [99.2, 519.0], [99.3, 538.0], [99.4, 574.0], [99.5, 594.0], [99.6, 628.0], [99.7, 654.0], [99.8, 723.0], [99.9, 772.0], [100.0, 1122.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[0.0, 583.0], [0.1, 592.0], [0.2, 594.0], [0.3, 596.0], [0.4, 597.0], [0.5, 598.0], [0.6, 598.0], [0.7, 599.0], [0.8, 599.0], [0.9, 600.0], [1.0, 600.0], [1.1, 601.0], [1.2, 601.0], [1.3, 602.0], [1.4, 602.0], [1.5, 604.0], [1.6, 604.0], [1.7, 604.0], [1.8, 604.0], [1.9, 605.0], [2.0, 605.0], [2.1, 605.0], [2.2, 605.0], [2.3, 606.0], [2.4, 606.0], [2.5, 606.0], [2.6, 607.0], [2.7, 607.0], [2.8, 607.0], [2.9, 607.0], [3.0, 608.0], [3.1, 608.0], [3.2, 608.0], [3.3, 608.0], [3.4, 608.0], [3.5, 609.0], [3.6, 609.0], [3.7, 609.0], [3.8, 610.0], [3.9, 610.0], [4.0, 610.0], [4.1, 610.0], [4.2, 610.0], [4.3, 610.0], [4.4, 611.0], [4.5, 611.0], [4.6, 611.0], [4.7, 611.0], [4.8, 611.0], [4.9, 612.0], [5.0, 612.0], [5.1, 612.0], [5.2, 612.0], [5.3, 612.0], [5.4, 612.0], [5.5, 612.0], [5.6, 613.0], [5.7, 613.0], [5.8, 613.0], [5.9, 613.0], [6.0, 613.0], [6.1, 613.0], [6.2, 614.0], [6.3, 614.0], [6.4, 614.0], [6.5, 614.0], [6.6, 614.0], [6.7, 614.0], [6.8, 614.0], [6.9, 615.0], [7.0, 615.0], [7.1, 615.0], [7.2, 615.0], [7.3, 615.0], [7.4, 615.0], [7.5, 615.0], [7.6, 615.0], [7.7, 616.0], [7.8, 616.0], [7.9, 616.0], [8.0, 616.0], [8.1, 616.0], [8.2, 616.0], [8.3, 617.0], [8.4, 617.0], [8.5, 617.0], [8.6, 617.0], [8.7, 617.0], [8.8, 617.0], [8.9, 617.0], [9.0, 618.0], [9.1, 618.0], [9.2, 618.0], [9.3, 618.0], [9.4, 618.0], [9.5, 618.0], [9.6, 618.0], [9.7, 619.0], [9.8, 619.0], [9.9, 619.0], [10.0, 619.0], [10.1, 619.0], [10.2, 619.0], [10.3, 620.0], [10.4, 620.0], [10.5, 620.0], [10.6, 620.0], [10.7, 620.0], [10.8, 620.0], [10.9, 620.0], [11.0, 621.0], [11.1, 621.0], [11.2, 621.0], [11.3, 621.0], [11.4, 621.0], [11.5, 621.0], [11.6, 621.0], [11.7, 621.0], [11.8, 621.0], [11.9, 621.0], [12.0, 622.0], [12.1, 622.0], [12.2, 622.0], [12.3, 622.0], [12.4, 622.0], [12.5, 622.0], [12.6, 622.0], [12.7, 622.0], [12.8, 622.0], [12.9, 622.0], [13.0, 622.0], [13.1, 623.0], [13.2, 623.0], [13.3, 623.0], [13.4, 623.0], [13.5, 623.0], [13.6, 623.0], [13.7, 623.0], [13.8, 623.0], [13.9, 623.0], [14.0, 623.0], [14.1, 624.0], [14.2, 624.0], [14.3, 624.0], [14.4, 624.0], [14.5, 624.0], [14.6, 624.0], [14.7, 624.0], [14.8, 624.0], [14.9, 624.0], [15.0, 624.0], [15.1, 625.0], [15.2, 625.0], [15.3, 625.0], [15.4, 625.0], [15.5, 625.0], [15.6, 625.0], [15.7, 625.0], [15.8, 625.0], [15.9, 625.0], [16.0, 625.0], [16.1, 625.0], [16.2, 625.0], [16.3, 626.0], [16.4, 626.0], [16.5, 626.0], [16.6, 626.0], [16.7, 626.0], [16.8, 626.0], [16.9, 626.0], [17.0, 626.0], [17.1, 626.0], [17.2, 626.0], [17.3, 626.0], [17.4, 626.0], [17.5, 626.0], [17.6, 626.0], [17.7, 626.0], [17.8, 626.0], [17.9, 627.0], [18.0, 627.0], [18.1, 627.0], [18.2, 627.0], [18.3, 627.0], [18.4, 627.0], [18.5, 627.0], [18.6, 627.0], [18.7, 627.0], [18.8, 627.0], [18.9, 627.0], [19.0, 627.0], [19.1, 627.0], [19.2, 628.0], [19.3, 628.0], [19.4, 628.0], [19.5, 628.0], [19.6, 628.0], [19.7, 628.0], [19.8, 628.0], [19.9, 628.0], [20.0, 628.0], [20.1, 628.0], [20.2, 628.0], [20.3, 628.0], [20.4, 629.0], [20.5, 629.0], [20.6, 629.0], [20.7, 629.0], [20.8, 629.0], [20.9, 629.0], [21.0, 629.0], [21.1, 629.0], [21.2, 629.0], [21.3, 629.0], [21.4, 629.0], [21.5, 629.0], [21.6, 629.0], [21.7, 630.0], [21.8, 630.0], [21.9, 630.0], [22.0, 630.0], [22.1, 630.0], [22.2, 630.0], [22.3, 630.0], [22.4, 630.0], [22.5, 630.0], [22.6, 631.0], [22.7, 631.0], [22.8, 631.0], [22.9, 631.0], [23.0, 631.0], [23.1, 631.0], [23.2, 631.0], [23.3, 631.0], [23.4, 631.0], [23.5, 631.0], [23.6, 631.0], [23.7, 631.0], [23.8, 631.0], [23.9, 631.0], [24.0, 631.0], [24.1, 632.0], [24.2, 632.0], [24.3, 632.0], [24.4, 632.0], [24.5, 632.0], [24.6, 632.0], [24.7, 632.0], [24.8, 632.0], [24.9, 632.0], [25.0, 632.0], [25.1, 632.0], [25.2, 632.0], [25.3, 633.0], [25.4, 633.0], [25.5, 633.0], [25.6, 633.0], [25.7, 633.0], [25.8, 633.0], [25.9, 633.0], [26.0, 633.0], [26.1, 633.0], [26.2, 633.0], [26.3, 633.0], [26.4, 633.0], [26.5, 633.0], [26.6, 633.0], [26.7, 634.0], [26.8, 634.0], [26.9, 634.0], [27.0, 634.0], [27.1, 634.0], [27.2, 634.0], [27.3, 634.0], [27.4, 634.0], [27.5, 634.0], [27.6, 634.0], [27.7, 634.0], [27.8, 634.0], [27.9, 635.0], [28.0, 635.0], [28.1, 635.0], [28.2, 635.0], [28.3, 635.0], [28.4, 635.0], [28.5, 635.0], [28.6, 635.0], [28.7, 635.0], [28.8, 635.0], [28.9, 635.0], [29.0, 635.0], [29.1, 635.0], [29.2, 636.0], [29.3, 636.0], [29.4, 636.0], [29.5, 636.0], [29.6, 636.0], [29.7, 636.0], [29.8, 636.0], [29.9, 636.0], [30.0, 636.0], [30.1, 636.0], [30.2, 636.0], [30.3, 636.0], [30.4, 636.0], [30.5, 636.0], [30.6, 636.0], [30.7, 636.0], [30.8, 636.0], [30.9, 636.0], [31.0, 637.0], [31.1, 637.0], [31.2, 637.0], [31.3, 637.0], [31.4, 637.0], [31.5, 637.0], [31.6, 637.0], [31.7, 637.0], [31.8, 637.0], [31.9, 637.0], [32.0, 637.0], [32.1, 637.0], [32.2, 637.0], [32.3, 637.0], [32.4, 637.0], [32.5, 637.0], [32.6, 638.0], [32.7, 638.0], [32.8, 638.0], [32.9, 638.0], [33.0, 638.0], [33.1, 638.0], [33.2, 638.0], [33.3, 638.0], [33.4, 638.0], [33.5, 638.0], [33.6, 638.0], [33.7, 638.0], [33.8, 638.0], [33.9, 639.0], [34.0, 639.0], [34.1, 639.0], [34.2, 639.0], [34.3, 639.0], [34.4, 639.0], [34.5, 639.0], [34.6, 639.0], [34.7, 639.0], [34.8, 639.0], [34.9, 639.0], [35.0, 639.0], [35.1, 639.0], [35.2, 639.0], [35.3, 639.0], [35.4, 639.0], [35.5, 639.0], [35.6, 640.0], [35.7, 640.0], [35.8, 640.0], [35.9, 640.0], [36.0, 640.0], [36.1, 640.0], [36.2, 640.0], [36.3, 640.0], [36.4, 640.0], [36.5, 640.0], [36.6, 640.0], [36.7, 640.0], [36.8, 641.0], [36.9, 641.0], [37.0, 641.0], [37.1, 641.0], [37.2, 641.0], [37.3, 641.0], [37.4, 641.0], [37.5, 641.0], [37.6, 641.0], [37.7, 641.0], [37.8, 641.0], [37.9, 641.0], [38.0, 641.0], [38.1, 641.0], [38.2, 641.0], [38.3, 642.0], [38.4, 642.0], [38.5, 642.0], [38.6, 642.0], [38.7, 642.0], [38.8, 642.0], [38.9, 642.0], [39.0, 642.0], [39.1, 642.0], [39.2, 642.0], [39.3, 642.0], [39.4, 642.0], [39.5, 642.0], [39.6, 643.0], [39.7, 643.0], [39.8, 643.0], [39.9, 643.0], [40.0, 643.0], [40.1, 643.0], [40.2, 643.0], [40.3, 643.0], [40.4, 643.0], [40.5, 644.0], [40.6, 644.0], [40.7, 644.0], [40.8, 644.0], [40.9, 644.0], [41.0, 644.0], [41.1, 644.0], [41.2, 644.0], [41.3, 644.0], [41.4, 644.0], [41.5, 645.0], [41.6, 645.0], [41.7, 645.0], [41.8, 645.0], [41.9, 645.0], [42.0, 645.0], [42.1, 645.0], [42.2, 645.0], [42.3, 645.0], [42.4, 645.0], [42.5, 645.0], [42.6, 645.0], [42.7, 645.0], [42.8, 646.0], [42.9, 646.0], [43.0, 646.0], [43.1, 646.0], [43.2, 646.0], [43.3, 646.0], [43.4, 646.0], [43.5, 646.0], [43.6, 646.0], [43.7, 646.0], [43.8, 646.0], [43.9, 646.0], [44.0, 647.0], [44.1, 647.0], [44.2, 647.0], [44.3, 647.0], [44.4, 647.0], [44.5, 647.0], [44.6, 647.0], [44.7, 647.0], [44.8, 647.0], [44.9, 647.0], [45.0, 648.0], [45.1, 648.0], [45.2, 648.0], [45.3, 648.0], [45.4, 648.0], [45.5, 648.0], [45.6, 648.0], [45.7, 648.0], [45.8, 648.0], [45.9, 648.0], [46.0, 648.0], [46.1, 648.0], [46.2, 648.0], [46.3, 649.0], [46.4, 649.0], [46.5, 649.0], [46.6, 649.0], [46.7, 649.0], [46.8, 649.0], [46.9, 649.0], [47.0, 649.0], [47.1, 649.0], [47.2, 649.0], [47.3, 649.0], [47.4, 650.0], [47.5, 650.0], [47.6, 650.0], [47.7, 650.0], [47.8, 650.0], [47.9, 650.0], [48.0, 650.0], [48.1, 650.0], [48.2, 650.0], [48.3, 650.0], [48.4, 650.0], [48.5, 650.0], [48.6, 651.0], [48.7, 651.0], [48.8, 651.0], [48.9, 651.0], [49.0, 651.0], [49.1, 651.0], [49.2, 651.0], [49.3, 651.0], [49.4, 651.0], [49.5, 651.0], [49.6, 651.0], [49.7, 651.0], [49.8, 651.0], [49.9, 651.0], [50.0, 652.0], [50.1, 652.0], [50.2, 652.0], [50.3, 652.0], [50.4, 652.0], [50.5, 652.0], [50.6, 652.0], [50.7, 652.0], [50.8, 652.0], [50.9, 652.0], [51.0, 652.0], [51.1, 652.0], [51.2, 652.0], [51.3, 652.0], [51.4, 652.0], [51.5, 652.0], [51.6, 652.0], [51.7, 652.0], [51.8, 652.0], [51.9, 653.0], [52.0, 653.0], [52.1, 653.0], [52.2, 653.0], [52.3, 653.0], [52.4, 653.0], [52.5, 653.0], [52.6, 653.0], [52.7, 653.0], [52.8, 653.0], [52.9, 653.0], [53.0, 653.0], [53.1, 654.0], [53.2, 654.0], [53.3, 654.0], [53.4, 654.0], [53.5, 654.0], [53.6, 654.0], [53.7, 654.0], [53.8, 654.0], [53.9, 654.0], [54.0, 654.0], [54.1, 654.0], [54.2, 655.0], [54.3, 655.0], [54.4, 655.0], [54.5, 655.0], [54.6, 655.0], [54.7, 655.0], [54.8, 655.0], [54.9, 655.0], [55.0, 655.0], [55.1, 655.0], [55.2, 656.0], [55.3, 656.0], [55.4, 656.0], [55.5, 656.0], [55.6, 656.0], [55.7, 656.0], [55.8, 656.0], [55.9, 656.0], [56.0, 656.0], [56.1, 656.0], [56.2, 656.0], [56.3, 657.0], [56.4, 657.0], [56.5, 657.0], [56.6, 657.0], [56.7, 657.0], [56.8, 657.0], [56.9, 657.0], [57.0, 657.0], [57.1, 657.0], [57.2, 657.0], [57.3, 657.0], [57.4, 657.0], [57.5, 658.0], [57.6, 658.0], [57.7, 658.0], [57.8, 658.0], [57.9, 658.0], [58.0, 658.0], [58.1, 658.0], [58.2, 658.0], [58.3, 658.0], [58.4, 658.0], [58.5, 658.0], [58.6, 659.0], [58.7, 659.0], [58.8, 659.0], [58.9, 659.0], [59.0, 659.0], [59.1, 659.0], [59.2, 659.0], [59.3, 659.0], [59.4, 659.0], [59.5, 659.0], [59.6, 659.0], [59.7, 659.0], [59.8, 660.0], [59.9, 660.0], [60.0, 660.0], [60.1, 660.0], [60.2, 660.0], [60.3, 660.0], [60.4, 661.0], [60.5, 661.0], [60.6, 661.0], [60.7, 661.0], [60.8, 661.0], [60.9, 661.0], [61.0, 661.0], [61.1, 661.0], [61.2, 661.0], [61.3, 661.0], [61.4, 661.0], [61.5, 661.0], [61.6, 661.0], [61.7, 662.0], [61.8, 662.0], [61.9, 662.0], [62.0, 662.0], [62.1, 662.0], [62.2, 662.0], [62.3, 662.0], [62.4, 662.0], [62.5, 662.0], [62.6, 662.0], [62.7, 662.0], [62.8, 662.0], [62.9, 662.0], [63.0, 662.0], [63.1, 663.0], [63.2, 663.0], [63.3, 663.0], [63.4, 663.0], [63.5, 663.0], [63.6, 663.0], [63.7, 663.0], [63.8, 663.0], [63.9, 663.0], [64.0, 663.0], [64.1, 664.0], [64.2, 664.0], [64.3, 664.0], [64.4, 664.0], [64.5, 664.0], [64.6, 664.0], [64.7, 664.0], [64.8, 664.0], [64.9, 664.0], [65.0, 665.0], [65.1, 665.0], [65.2, 665.0], [65.3, 665.0], [65.4, 665.0], [65.5, 665.0], [65.6, 665.0], [65.7, 665.0], [65.8, 665.0], [65.9, 666.0], [66.0, 666.0], [66.1, 666.0], [66.2, 666.0], [66.3, 666.0], [66.4, 666.0], [66.5, 666.0], [66.6, 666.0], [66.7, 666.0], [66.8, 666.0], [66.9, 667.0], [67.0, 667.0], [67.1, 667.0], [67.2, 667.0], [67.3, 668.0], [67.4, 668.0], [67.5, 668.0], [67.6, 668.0], [67.7, 668.0], [67.8, 668.0], [67.9, 668.0], [68.0, 668.0], [68.1, 669.0], [68.2, 669.0], [68.3, 669.0], [68.4, 669.0], [68.5, 669.0], [68.6, 669.0], [68.7, 669.0], [68.8, 670.0], [68.9, 670.0], [69.0, 670.0], [69.1, 670.0], [69.2, 670.0], [69.3, 670.0], [69.4, 670.0], [69.5, 670.0], [69.6, 671.0], [69.7, 671.0], [69.8, 671.0], [69.9, 671.0], [70.0, 671.0], [70.1, 671.0], [70.2, 672.0], [70.3, 672.0], [70.4, 672.0], [70.5, 672.0], [70.6, 672.0], [70.7, 672.0], [70.8, 672.0], [70.9, 672.0], [71.0, 673.0], [71.1, 673.0], [71.2, 673.0], [71.3, 673.0], [71.4, 673.0], [71.5, 673.0], [71.6, 673.0], [71.7, 674.0], [71.8, 674.0], [71.9, 674.0], [72.0, 674.0], [72.1, 674.0], [72.2, 674.0], [72.3, 674.0], [72.4, 674.0], [72.5, 675.0], [72.6, 675.0], [72.7, 675.0], [72.8, 675.0], [72.9, 675.0], [73.0, 676.0], [73.1, 676.0], [73.2, 676.0], [73.3, 676.0], [73.4, 676.0], [73.5, 676.0], [73.6, 677.0], [73.7, 677.0], [73.8, 677.0], [73.9, 677.0], [74.0, 677.0], [74.1, 677.0], [74.2, 677.0], [74.3, 677.0], [74.4, 677.0], [74.5, 677.0], [74.6, 677.0], [74.7, 678.0], [74.8, 678.0], [74.9, 678.0], [75.0, 678.0], [75.1, 678.0], [75.2, 678.0], [75.3, 679.0], [75.4, 679.0], [75.5, 679.0], [75.6, 679.0], [75.7, 679.0], [75.8, 679.0], [75.9, 679.0], [76.0, 680.0], [76.1, 680.0], [76.2, 680.0], [76.3, 680.0], [76.4, 680.0], [76.5, 681.0], [76.6, 681.0], [76.7, 681.0], [76.8, 681.0], [76.9, 682.0], [77.0, 682.0], [77.1, 682.0], [77.2, 682.0], [77.3, 682.0], [77.4, 683.0], [77.5, 683.0], [77.6, 683.0], [77.7, 683.0], [77.8, 684.0], [77.9, 684.0], [78.0, 684.0], [78.1, 684.0], [78.2, 685.0], [78.3, 685.0], [78.4, 685.0], [78.5, 685.0], [78.6, 685.0], [78.7, 686.0], [78.8, 686.0], [78.9, 686.0], [79.0, 686.0], [79.1, 687.0], [79.2, 687.0], [79.3, 687.0], [79.4, 687.0], [79.5, 687.0], [79.6, 688.0], [79.7, 688.0], [79.8, 689.0], [79.9, 689.0], [80.0, 689.0], [80.1, 689.0], [80.2, 689.0], [80.3, 690.0], [80.4, 690.0], [80.5, 690.0], [80.6, 690.0], [80.7, 691.0], [80.8, 691.0], [80.9, 691.0], [81.0, 691.0], [81.1, 691.0], [81.2, 692.0], [81.3, 692.0], [81.4, 692.0], [81.5, 693.0], [81.6, 693.0], [81.7, 693.0], [81.8, 693.0], [81.9, 694.0], [82.0, 694.0], [82.1, 695.0], [82.2, 695.0], [82.3, 695.0], [82.4, 695.0], [82.5, 696.0], [82.6, 696.0], [82.7, 696.0], [82.8, 696.0], [82.9, 697.0], [83.0, 697.0], [83.1, 698.0], [83.2, 698.0], [83.3, 698.0], [83.4, 698.0], [83.5, 699.0], [83.6, 699.0], [83.7, 699.0], [83.8, 699.0], [83.9, 700.0], [84.0, 700.0], [84.1, 700.0], [84.2, 701.0], [84.3, 701.0], [84.4, 701.0], [84.5, 702.0], [84.6, 702.0], [84.7, 702.0], [84.8, 702.0], [84.9, 703.0], [85.0, 703.0], [85.1, 704.0], [85.2, 704.0], [85.3, 704.0], [85.4, 705.0], [85.5, 705.0], [85.6, 706.0], [85.7, 706.0], [85.8, 706.0], [85.9, 707.0], [86.0, 707.0], [86.1, 708.0], [86.2, 708.0], [86.3, 709.0], [86.4, 709.0], [86.5, 710.0], [86.6, 710.0], [86.7, 711.0], [86.8, 711.0], [86.9, 711.0], [87.0, 712.0], [87.1, 712.0], [87.2, 712.0], [87.3, 713.0], [87.4, 713.0], [87.5, 714.0], [87.6, 714.0], [87.7, 715.0], [87.8, 715.0], [87.9, 716.0], [88.0, 716.0], [88.1, 716.0], [88.2, 717.0], [88.3, 717.0], [88.4, 717.0], [88.5, 718.0], [88.6, 718.0], [88.7, 719.0], [88.8, 719.0], [88.9, 721.0], [89.0, 721.0], [89.1, 722.0], [89.2, 723.0], [89.3, 723.0], [89.4, 723.0], [89.5, 724.0], [89.6, 725.0], [89.7, 726.0], [89.8, 726.0], [89.9, 726.0], [90.0, 726.0], [90.1, 727.0], [90.2, 728.0], [90.3, 728.0], [90.4, 728.0], [90.5, 729.0], [90.6, 730.0], [90.7, 730.0], [90.8, 731.0], [90.9, 731.0], [91.0, 732.0], [91.1, 733.0], [91.2, 734.0], [91.3, 735.0], [91.4, 736.0], [91.5, 737.0], [91.6, 737.0], [91.7, 737.0], [91.8, 738.0], [91.9, 740.0], [92.0, 741.0], [92.1, 742.0], [92.2, 742.0], [92.3, 743.0], [92.4, 744.0], [92.5, 745.0], [92.6, 746.0], [92.7, 747.0], [92.8, 748.0], [92.9, 749.0], [93.0, 750.0], [93.1, 750.0], [93.2, 751.0], [93.3, 751.0], [93.4, 752.0], [93.5, 753.0], [93.6, 753.0], [93.7, 754.0], [93.8, 754.0], [93.9, 755.0], [94.0, 757.0], [94.1, 758.0], [94.2, 759.0], [94.3, 760.0], [94.4, 762.0], [94.5, 763.0], [94.6, 764.0], [94.7, 766.0], [94.8, 768.0], [94.9, 770.0], [95.0, 772.0], [95.1, 773.0], [95.2, 776.0], [95.3, 777.0], [95.4, 778.0], [95.5, 779.0], [95.6, 780.0], [95.7, 782.0], [95.8, 783.0], [95.9, 785.0], [96.0, 788.0], [96.1, 791.0], [96.2, 793.0], [96.3, 794.0], [96.4, 799.0], [96.5, 800.0], [96.6, 802.0], [96.7, 803.0], [96.8, 804.0], [96.9, 809.0], [97.0, 812.0], [97.1, 817.0], [97.2, 819.0], [97.3, 825.0], [97.4, 827.0], [97.5, 829.0], [97.6, 835.0], [97.7, 836.0], [97.8, 843.0], [97.9, 844.0], [98.0, 850.0], [98.1, 852.0], [98.2, 855.0], [98.3, 855.0], [98.4, 855.0], [98.5, 861.0], [98.6, 867.0], [98.7, 871.0], [98.8, 876.0], [98.9, 887.0], [99.0, 892.0], [99.1, 901.0], [99.2, 914.0], [99.3, 921.0], [99.4, 942.0], [99.5, 951.0], [99.6, 967.0], [99.7, 976.0], [99.8, 1000.0], [99.9, 1039.0], [100.0, 1542.0]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[0.0, 291.0], [0.1, 294.0], [0.2, 296.0], [0.3, 296.0], [0.4, 298.0], [0.5, 299.0], [0.6, 300.0], [0.7, 300.0], [0.8, 301.0], [0.9, 302.0], [1.0, 302.0], [1.1, 302.0], [1.2, 303.0], [1.3, 303.0], [1.4, 303.0], [1.5, 304.0], [1.6, 304.0], [1.7, 304.0], [1.8, 305.0], [1.9, 305.0], [2.0, 305.0], [2.1, 306.0], [2.2, 306.0], [2.3, 306.0], [2.4, 306.0], [2.5, 307.0], [2.6, 307.0], [2.7, 307.0], [2.8, 307.0], [2.9, 307.0], [3.0, 308.0], [3.1, 308.0], [3.2, 308.0], [3.3, 308.0], [3.4, 308.0], [3.5, 308.0], [3.6, 308.0], [3.7, 309.0], [3.8, 309.0], [3.9, 309.0], [4.0, 309.0], [4.1, 309.0], [4.2, 309.0], [4.3, 310.0], [4.4, 310.0], [4.5, 310.0], [4.6, 310.0], [4.7, 310.0], [4.8, 310.0], [4.9, 310.0], [5.0, 310.0], [5.1, 310.0], [5.2, 310.0], [5.3, 311.0], [5.4, 311.0], [5.5, 311.0], [5.6, 311.0], [5.7, 311.0], [5.8, 311.0], [5.9, 312.0], [6.0, 312.0], [6.1, 312.0], [6.2, 312.0], [6.3, 312.0], [6.4, 312.0], [6.5, 312.0], [6.6, 312.0], [6.7, 312.0], [6.8, 312.0], [6.9, 313.0], [7.0, 313.0], [7.1, 313.0], [7.2, 313.0], [7.3, 313.0], [7.4, 313.0], [7.5, 313.0], [7.6, 313.0], [7.7, 313.0], [7.8, 313.0], [7.9, 313.0], [8.0, 313.0], [8.1, 313.0], [8.2, 314.0], [8.3, 314.0], [8.4, 314.0], [8.5, 314.0], [8.6, 314.0], [8.7, 314.0], [8.8, 314.0], [8.9, 314.0], [9.0, 314.0], [9.1, 314.0], [9.2, 314.0], [9.3, 314.0], [9.4, 314.0], [9.5, 315.0], [9.6, 315.0], [9.7, 315.0], [9.8, 315.0], [9.9, 315.0], [10.0, 315.0], [10.1, 315.0], [10.2, 315.0], [10.3, 315.0], [10.4, 315.0], [10.5, 315.0], [10.6, 315.0], [10.7, 316.0], [10.8, 316.0], [10.9, 316.0], [11.0, 316.0], [11.1, 316.0], [11.2, 316.0], [11.3, 316.0], [11.4, 316.0], [11.5, 316.0], [11.6, 316.0], [11.7, 316.0], [11.8, 316.0], [11.9, 316.0], [12.0, 317.0], [12.1, 317.0], [12.2, 317.0], [12.3, 317.0], [12.4, 317.0], [12.5, 317.0], [12.6, 317.0], [12.7, 317.0], [12.8, 317.0], [12.9, 317.0], [13.0, 317.0], [13.1, 317.0], [13.2, 317.0], [13.3, 317.0], [13.4, 318.0], [13.5, 318.0], [13.6, 318.0], [13.7, 318.0], [13.8, 318.0], [13.9, 318.0], [14.0, 318.0], [14.1, 318.0], [14.2, 318.0], [14.3, 318.0], [14.4, 318.0], [14.5, 318.0], [14.6, 318.0], [14.7, 318.0], [14.8, 318.0], [14.9, 318.0], [15.0, 318.0], [15.1, 318.0], [15.2, 319.0], [15.3, 319.0], [15.4, 319.0], [15.5, 319.0], [15.6, 319.0], [15.7, 319.0], [15.8, 319.0], [15.9, 319.0], [16.0, 319.0], [16.1, 319.0], [16.2, 319.0], [16.3, 319.0], [16.4, 319.0], [16.5, 319.0], [16.6, 320.0], [16.7, 320.0], [16.8, 320.0], [16.9, 320.0], [17.0, 320.0], [17.1, 320.0], [17.2, 320.0], [17.3, 320.0], [17.4, 320.0], [17.5, 320.0], [17.6, 320.0], [17.7, 320.0], [17.8, 320.0], [17.9, 320.0], [18.0, 320.0], [18.1, 320.0], [18.2, 320.0], [18.3, 320.0], [18.4, 321.0], [18.5, 321.0], [18.6, 321.0], [18.7, 321.0], [18.8, 321.0], [18.9, 321.0], [19.0, 321.0], [19.1, 321.0], [19.2, 321.0], [19.3, 321.0], [19.4, 322.0], [19.5, 322.0], [19.6, 322.0], [19.7, 322.0], [19.8, 322.0], [19.9, 322.0], [20.0, 322.0], [20.1, 322.0], [20.2, 322.0], [20.3, 322.0], [20.4, 322.0], [20.5, 322.0], [20.6, 322.0], [20.7, 322.0], [20.8, 322.0], [20.9, 322.0], [21.0, 322.0], [21.1, 322.0], [21.2, 322.0], [21.3, 322.0], [21.4, 322.0], [21.5, 323.0], [21.6, 323.0], [21.7, 323.0], [21.8, 323.0], [21.9, 323.0], [22.0, 323.0], [22.1, 323.0], [22.2, 323.0], [22.3, 323.0], [22.4, 323.0], [22.5, 323.0], [22.6, 323.0], [22.7, 323.0], [22.8, 323.0], [22.9, 323.0], [23.0, 324.0], [23.1, 324.0], [23.2, 324.0], [23.3, 324.0], [23.4, 324.0], [23.5, 324.0], [23.6, 324.0], [23.7, 324.0], [23.8, 324.0], [23.9, 324.0], [24.0, 324.0], [24.1, 324.0], [24.2, 324.0], [24.3, 324.0], [24.4, 324.0], [24.5, 324.0], [24.6, 324.0], [24.7, 324.0], [24.8, 325.0], [24.9, 325.0], [25.0, 325.0], [25.1, 325.0], [25.2, 325.0], [25.3, 325.0], [25.4, 325.0], [25.5, 325.0], [25.6, 325.0], [25.7, 325.0], [25.8, 325.0], [25.9, 325.0], [26.0, 325.0], [26.1, 325.0], [26.2, 325.0], [26.3, 325.0], [26.4, 325.0], [26.5, 325.0], [26.6, 326.0], [26.7, 326.0], [26.8, 326.0], [26.9, 326.0], [27.0, 326.0], [27.1, 326.0], [27.2, 326.0], [27.3, 326.0], [27.4, 326.0], [27.5, 326.0], [27.6, 326.0], [27.7, 326.0], [27.8, 326.0], [27.9, 326.0], [28.0, 326.0], [28.1, 326.0], [28.2, 326.0], [28.3, 326.0], [28.4, 326.0], [28.5, 326.0], [28.6, 326.0], [28.7, 326.0], [28.8, 327.0], [28.9, 327.0], [29.0, 327.0], [29.1, 327.0], [29.2, 327.0], [29.3, 327.0], [29.4, 327.0], [29.5, 327.0], [29.6, 327.0], [29.7, 327.0], [29.8, 327.0], [29.9, 327.0], [30.0, 327.0], [30.1, 327.0], [30.2, 327.0], [30.3, 327.0], [30.4, 327.0], [30.5, 327.0], [30.6, 327.0], [30.7, 327.0], [30.8, 328.0], [30.9, 328.0], [31.0, 328.0], [31.1, 328.0], [31.2, 328.0], [31.3, 328.0], [31.4, 328.0], [31.5, 328.0], [31.6, 328.0], [31.7, 328.0], [31.8, 328.0], [31.9, 328.0], [32.0, 328.0], [32.1, 328.0], [32.2, 328.0], [32.3, 328.0], [32.4, 328.0], [32.5, 328.0], [32.6, 329.0], [32.7, 329.0], [32.8, 329.0], [32.9, 329.0], [33.0, 329.0], [33.1, 329.0], [33.2, 329.0], [33.3, 329.0], [33.4, 329.0], [33.5, 329.0], [33.6, 329.0], [33.7, 329.0], [33.8, 329.0], [33.9, 329.0], [34.0, 329.0], [34.1, 329.0], [34.2, 329.0], [34.3, 329.0], [34.4, 329.0], [34.5, 329.0], [34.6, 329.0], [34.7, 330.0], [34.8, 330.0], [34.9, 330.0], [35.0, 330.0], [35.1, 330.0], [35.2, 330.0], [35.3, 330.0], [35.4, 330.0], [35.5, 330.0], [35.6, 330.0], [35.7, 330.0], [35.8, 330.0], [35.9, 330.0], [36.0, 330.0], [36.1, 330.0], [36.2, 331.0], [36.3, 331.0], [36.4, 331.0], [36.5, 331.0], [36.6, 331.0], [36.7, 331.0], [36.8, 331.0], [36.9, 331.0], [37.0, 331.0], [37.1, 331.0], [37.2, 331.0], [37.3, 331.0], [37.4, 331.0], [37.5, 331.0], [37.6, 331.0], [37.7, 331.0], [37.8, 331.0], [37.9, 332.0], [38.0, 332.0], [38.1, 332.0], [38.2, 332.0], [38.3, 332.0], [38.4, 332.0], [38.5, 332.0], [38.6, 332.0], [38.7, 332.0], [38.8, 332.0], [38.9, 332.0], [39.0, 332.0], [39.1, 332.0], [39.2, 332.0], [39.3, 332.0], [39.4, 332.0], [39.5, 332.0], [39.6, 333.0], [39.7, 333.0], [39.8, 333.0], [39.9, 333.0], [40.0, 333.0], [40.1, 333.0], [40.2, 333.0], [40.3, 333.0], [40.4, 333.0], [40.5, 333.0], [40.6, 333.0], [40.7, 333.0], [40.8, 333.0], [40.9, 333.0], [41.0, 333.0], [41.1, 333.0], [41.2, 333.0], [41.3, 333.0], [41.4, 334.0], [41.5, 334.0], [41.6, 334.0], [41.7, 334.0], [41.8, 334.0], [41.9, 334.0], [42.0, 334.0], [42.1, 334.0], [42.2, 334.0], [42.3, 334.0], [42.4, 334.0], [42.5, 334.0], [42.6, 334.0], [42.7, 334.0], [42.8, 334.0], [42.9, 334.0], [43.0, 334.0], [43.1, 334.0], [43.2, 334.0], [43.3, 335.0], [43.4, 335.0], [43.5, 335.0], [43.6, 335.0], [43.7, 335.0], [43.8, 335.0], [43.9, 335.0], [44.0, 335.0], [44.1, 335.0], [44.2, 335.0], [44.3, 335.0], [44.4, 335.0], [44.5, 335.0], [44.6, 335.0], [44.7, 336.0], [44.8, 336.0], [44.9, 336.0], [45.0, 336.0], [45.1, 336.0], [45.2, 336.0], [45.3, 336.0], [45.4, 336.0], [45.5, 336.0], [45.6, 336.0], [45.7, 336.0], [45.8, 336.0], [45.9, 336.0], [46.0, 336.0], [46.1, 336.0], [46.2, 336.0], [46.3, 336.0], [46.4, 336.0], [46.5, 336.0], [46.6, 336.0], [46.7, 336.0], [46.8, 336.0], [46.9, 336.0], [47.0, 336.0], [47.1, 337.0], [47.2, 337.0], [47.3, 337.0], [47.4, 337.0], [47.5, 337.0], [47.6, 337.0], [47.7, 337.0], [47.8, 337.0], [47.9, 337.0], [48.0, 337.0], [48.1, 337.0], [48.2, 337.0], [48.3, 337.0], [48.4, 337.0], [48.5, 337.0], [48.6, 337.0], [48.7, 338.0], [48.8, 338.0], [48.9, 338.0], [49.0, 338.0], [49.1, 338.0], [49.2, 338.0], [49.3, 338.0], [49.4, 338.0], [49.5, 338.0], [49.6, 338.0], [49.7, 338.0], [49.8, 338.0], [49.9, 338.0], [50.0, 338.0], [50.1, 338.0], [50.2, 338.0], [50.3, 338.0], [50.4, 338.0], [50.5, 338.0], [50.6, 339.0], [50.7, 339.0], [50.8, 339.0], [50.9, 339.0], [51.0, 339.0], [51.1, 339.0], [51.2, 339.0], [51.3, 339.0], [51.4, 339.0], [51.5, 339.0], [51.6, 339.0], [51.7, 339.0], [51.8, 339.0], [51.9, 339.0], [52.0, 339.0], [52.1, 339.0], [52.2, 339.0], [52.3, 339.0], [52.4, 340.0], [52.5, 340.0], [52.6, 340.0], [52.7, 340.0], [52.8, 340.0], [52.9, 340.0], [53.0, 340.0], [53.1, 340.0], [53.2, 340.0], [53.3, 340.0], [53.4, 340.0], [53.5, 340.0], [53.6, 340.0], [53.7, 340.0], [53.8, 340.0], [53.9, 340.0], [54.0, 340.0], [54.1, 340.0], [54.2, 340.0], [54.3, 341.0], [54.4, 341.0], [54.5, 341.0], [54.6, 341.0], [54.7, 341.0], [54.8, 341.0], [54.9, 341.0], [55.0, 341.0], [55.1, 341.0], [55.2, 341.0], [55.3, 341.0], [55.4, 341.0], [55.5, 341.0], [55.6, 341.0], [55.7, 341.0], [55.8, 341.0], [55.9, 341.0], [56.0, 341.0], [56.1, 342.0], [56.2, 342.0], [56.3, 342.0], [56.4, 342.0], [56.5, 342.0], [56.6, 342.0], [56.7, 342.0], [56.8, 342.0], [56.9, 342.0], [57.0, 342.0], [57.1, 342.0], [57.2, 342.0], [57.3, 342.0], [57.4, 342.0], [57.5, 342.0], [57.6, 343.0], [57.7, 343.0], [57.8, 343.0], [57.9, 343.0], [58.0, 343.0], [58.1, 343.0], [58.2, 343.0], [58.3, 343.0], [58.4, 343.0], [58.5, 343.0], [58.6, 343.0], [58.7, 343.0], [58.8, 343.0], [58.9, 344.0], [59.0, 344.0], [59.1, 344.0], [59.2, 344.0], [59.3, 344.0], [59.4, 344.0], [59.5, 344.0], [59.6, 344.0], [59.7, 344.0], [59.8, 344.0], [59.9, 344.0], [60.0, 344.0], [60.1, 344.0], [60.2, 344.0], [60.3, 345.0], [60.4, 345.0], [60.5, 345.0], [60.6, 345.0], [60.7, 345.0], [60.8, 345.0], [60.9, 345.0], [61.0, 345.0], [61.1, 345.0], [61.2, 345.0], [61.3, 345.0], [61.4, 345.0], [61.5, 345.0], [61.6, 345.0], [61.7, 346.0], [61.8, 346.0], [61.9, 346.0], [62.0, 346.0], [62.1, 346.0], [62.2, 346.0], [62.3, 346.0], [62.4, 346.0], [62.5, 346.0], [62.6, 346.0], [62.7, 346.0], [62.8, 346.0], [62.9, 346.0], [63.0, 346.0], [63.1, 347.0], [63.2, 347.0], [63.3, 347.0], [63.4, 347.0], [63.5, 347.0], [63.6, 347.0], [63.7, 347.0], [63.8, 347.0], [63.9, 347.0], [64.0, 347.0], [64.1, 347.0], [64.2, 347.0], [64.3, 347.0], [64.4, 347.0], [64.5, 347.0], [64.6, 348.0], [64.7, 348.0], [64.8, 348.0], [64.9, 348.0], [65.0, 348.0], [65.1, 348.0], [65.2, 348.0], [65.3, 348.0], [65.4, 348.0], [65.5, 348.0], [65.6, 348.0], [65.7, 348.0], [65.8, 349.0], [65.9, 349.0], [66.0, 349.0], [66.1, 349.0], [66.2, 349.0], [66.3, 349.0], [66.4, 349.0], [66.5, 349.0], [66.6, 349.0], [66.7, 349.0], [66.8, 349.0], [66.9, 349.0], [67.0, 349.0], [67.1, 349.0], [67.2, 350.0], [67.3, 350.0], [67.4, 350.0], [67.5, 350.0], [67.6, 350.0], [67.7, 350.0], [67.8, 350.0], [67.9, 350.0], [68.0, 350.0], [68.1, 350.0], [68.2, 350.0], [68.3, 350.0], [68.4, 350.0], [68.5, 350.0], [68.6, 351.0], [68.7, 351.0], [68.8, 351.0], [68.9, 351.0], [69.0, 351.0], [69.1, 351.0], [69.2, 351.0], [69.3, 351.0], [69.4, 351.0], [69.5, 351.0], [69.6, 351.0], [69.7, 351.0], [69.8, 351.0], [69.9, 351.0], [70.0, 352.0], [70.1, 352.0], [70.2, 352.0], [70.3, 352.0], [70.4, 352.0], [70.5, 352.0], [70.6, 352.0], [70.7, 352.0], [70.8, 353.0], [70.9, 353.0], [71.0, 353.0], [71.1, 353.0], [71.2, 353.0], [71.3, 353.0], [71.4, 353.0], [71.5, 354.0], [71.6, 354.0], [71.7, 354.0], [71.8, 354.0], [71.9, 354.0], [72.0, 354.0], [72.1, 354.0], [72.2, 354.0], [72.3, 354.0], [72.4, 354.0], [72.5, 355.0], [72.6, 355.0], [72.7, 355.0], [72.8, 355.0], [72.9, 355.0], [73.0, 355.0], [73.1, 355.0], [73.2, 356.0], [73.3, 356.0], [73.4, 356.0], [73.5, 356.0], [73.6, 356.0], [73.7, 356.0], [73.8, 356.0], [73.9, 357.0], [74.0, 357.0], [74.1, 357.0], [74.2, 357.0], [74.3, 357.0], [74.4, 357.0], [74.5, 357.0], [74.6, 357.0], [74.7, 358.0], [74.8, 358.0], [74.9, 358.0], [75.0, 358.0], [75.1, 358.0], [75.2, 358.0], [75.3, 359.0], [75.4, 359.0], [75.5, 359.0], [75.6, 359.0], [75.7, 359.0], [75.8, 359.0], [75.9, 359.0], [76.0, 360.0], [76.1, 360.0], [76.2, 360.0], [76.3, 360.0], [76.4, 360.0], [76.5, 360.0], [76.6, 360.0], [76.7, 360.0], [76.8, 361.0], [76.9, 361.0], [77.0, 361.0], [77.1, 361.0], [77.2, 361.0], [77.3, 361.0], [77.4, 362.0], [77.5, 362.0], [77.6, 362.0], [77.7, 362.0], [77.8, 362.0], [77.9, 362.0], [78.0, 362.0], [78.1, 363.0], [78.2, 363.0], [78.3, 363.0], [78.4, 363.0], [78.5, 363.0], [78.6, 364.0], [78.7, 364.0], [78.8, 364.0], [78.9, 364.0], [79.0, 364.0], [79.1, 364.0], [79.2, 365.0], [79.3, 365.0], [79.4, 365.0], [79.5, 365.0], [79.6, 365.0], [79.7, 365.0], [79.8, 365.0], [79.9, 365.0], [80.0, 366.0], [80.1, 366.0], [80.2, 366.0], [80.3, 366.0], [80.4, 366.0], [80.5, 366.0], [80.6, 367.0], [80.7, 367.0], [80.8, 367.0], [80.9, 367.0], [81.0, 368.0], [81.1, 368.0], [81.2, 368.0], [81.3, 368.0], [81.4, 368.0], [81.5, 368.0], [81.6, 369.0], [81.7, 369.0], [81.8, 369.0], [81.9, 369.0], [82.0, 369.0], [82.1, 369.0], [82.2, 370.0], [82.3, 370.0], [82.4, 370.0], [82.5, 370.0], [82.6, 370.0], [82.7, 371.0], [82.8, 371.0], [82.9, 371.0], [83.0, 371.0], [83.1, 371.0], [83.2, 371.0], [83.3, 371.0], [83.4, 372.0], [83.5, 372.0], [83.6, 372.0], [83.7, 372.0], [83.8, 372.0], [83.9, 373.0], [84.0, 373.0], [84.1, 373.0], [84.2, 373.0], [84.3, 374.0], [84.4, 374.0], [84.5, 374.0], [84.6, 374.0], [84.7, 375.0], [84.8, 375.0], [84.9, 375.0], [85.0, 375.0], [85.1, 375.0], [85.2, 375.0], [85.3, 376.0], [85.4, 376.0], [85.5, 376.0], [85.6, 376.0], [85.7, 377.0], [85.8, 377.0], [85.9, 377.0], [86.0, 377.0], [86.1, 377.0], [86.2, 378.0], [86.3, 378.0], [86.4, 378.0], [86.5, 379.0], [86.6, 379.0], [86.7, 379.0], [86.8, 379.0], [86.9, 379.0], [87.0, 380.0], [87.1, 380.0], [87.2, 380.0], [87.3, 380.0], [87.4, 380.0], [87.5, 381.0], [87.6, 381.0], [87.7, 381.0], [87.8, 382.0], [87.9, 382.0], [88.0, 382.0], [88.1, 383.0], [88.2, 383.0], [88.3, 383.0], [88.4, 384.0], [88.5, 384.0], [88.6, 385.0], [88.7, 385.0], [88.8, 385.0], [88.9, 386.0], [89.0, 386.0], [89.1, 386.0], [89.2, 386.0], [89.3, 386.0], [89.4, 387.0], [89.5, 387.0], [89.6, 387.0], [89.7, 387.0], [89.8, 388.0], [89.9, 388.0], [90.0, 388.0], [90.1, 389.0], [90.2, 389.0], [90.3, 390.0], [90.4, 390.0], [90.5, 390.0], [90.6, 391.0], [90.7, 391.0], [90.8, 392.0], [90.9, 392.0], [91.0, 393.0], [91.1, 393.0], [91.2, 394.0], [91.3, 395.0], [91.4, 395.0], [91.5, 396.0], [91.6, 396.0], [91.7, 397.0], [91.8, 397.0], [91.9, 397.0], [92.0, 398.0], [92.1, 398.0], [92.2, 399.0], [92.3, 399.0], [92.4, 400.0], [92.5, 401.0], [92.6, 402.0], [92.7, 402.0], [92.8, 404.0], [92.9, 404.0], [93.0, 405.0], [93.1, 405.0], [93.2, 406.0], [93.3, 407.0], [93.4, 407.0], [93.5, 408.0], [93.6, 408.0], [93.7, 409.0], [93.8, 411.0], [93.9, 412.0], [94.0, 412.0], [94.1, 413.0], [94.2, 413.0], [94.3, 414.0], [94.4, 414.0], [94.5, 415.0], [94.6, 415.0], [94.7, 416.0], [94.8, 416.0], [94.9, 416.0], [95.0, 418.0], [95.1, 418.0], [95.2, 419.0], [95.3, 420.0], [95.4, 421.0], [95.5, 421.0], [95.6, 423.0], [95.7, 424.0], [95.8, 425.0], [95.9, 427.0], [96.0, 428.0], [96.1, 429.0], [96.2, 431.0], [96.3, 432.0], [96.4, 433.0], [96.5, 434.0], [96.6, 436.0], [96.7, 437.0], [96.8, 438.0], [96.9, 439.0], [97.0, 440.0], [97.1, 443.0], [97.2, 445.0], [97.3, 447.0], [97.4, 450.0], [97.5, 450.0], [97.6, 450.0], [97.7, 453.0], [97.8, 454.0], [97.9, 459.0], [98.0, 461.0], [98.1, 464.0], [98.2, 467.0], [98.3, 468.0], [98.4, 468.0], [98.5, 471.0], [98.6, 478.0], [98.7, 481.0], [98.8, 485.0], [98.9, 490.0], [99.0, 494.0], [99.1, 497.0], [99.2, 529.0], [99.3, 551.0], [99.4, 561.0], [99.5, 567.0], [99.6, 575.0], [99.7, 597.0], [99.8, 657.0], [99.9, 671.0], [100.0, 1163.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 3700.0, "series": [{"data": [[1100.0, 2.0], [300.0, 3700.0], [600.0, 12.0], [700.0, 1.0], [200.0, 29.0], [400.0, 225.0], [900.0, 1.0], [500.0, 27.0], [1000.0, 3.0]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[300.0, 3433.0], [600.0, 14.0], [700.0, 6.0], [400.0, 490.0], [200.0, 6.0], [800.0, 1.0], [900.0, 1.0], [500.0, 46.0], [1000.0, 3.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 3412.0], [600.0, 9.0], [700.0, 7.0], [400.0, 535.0], [200.0, 3.0], [900.0, 1.0], [500.0, 31.0], [1000.0, 1.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[600.0, 3320.0], [1200.0, 1.0], [1300.0, 1.0], [700.0, 506.0], [1500.0, 1.0], [800.0, 104.0], [900.0, 28.0], [500.0, 33.0], [1000.0, 6.0]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 3669.0], [600.0, 9.0], [700.0, 2.0], [200.0, 24.0], [400.0, 271.0], [500.0, 24.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15802.0, "series": [{"data": [[0.0, 15802.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4197.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 80.21875, "minX": 1.69825128E12, "maxY": 84.1714895319379, "series": [{"data": [[1.6982514E12, 84.1714895319379], [1.69825128E12, 80.21875], [1.69825134E12, 83.09950788222524]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6982514E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 297.0, "minX": 1.0, "maxY": 784.7368421052632, "series": [{"data": [[49.0, 437.0], [51.0, 510.50000000000006], [57.0, 329.4], [59.0, 329.0], [60.0, 297.0], [61.0, 314.07142857142856], [62.0, 329.9230769230769], [63.0, 324.3333333333333], [64.0, 314.0], [65.0, 298.0], [67.0, 335.3333333333333], [68.0, 328.0], [69.0, 335.0], [70.0, 341.25], [74.0, 331.3333333333333], [75.0, 326.25], [76.0, 321.52], [79.0, 329.62033898305117], [78.0, 326.6303317535545], [77.0, 323.11428571428576], [80.0, 330.12566844919775], [82.0, 340.11083123425703], [83.0, 344.8050847457627], [81.0, 337.325167037862], [85.0, 351.1129707112973], [86.0, 347.2624434389139], [84.0, 346.1563636363635], [87.0, 352.37423312883425], [89.0, 374.1118881118882], [91.0, 356.50602409638566], [90.0, 362.4758064516128], [88.0, 373.2551724137932], [92.0, 381.7374999999999], [95.0, 388.42105263157896], [94.0, 378.12500000000006], [93.0, 360.62500000000006], [96.0, 388.09374999999994], [98.0, 376.47058823529414], [99.0, 443.6666666666667], [97.0, 397.3571428571429], [100.0, 457.3333333333333], [101.0, 368.5], [102.0, 399.0], [103.0, 451.0]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[83.50799999999997, 346.1427499999996]], "isOverall": false, "label": "Set Booking-Aggregated", "isController": false}, {"data": [[20.0, 443.3333333333333], [21.0, 458.0], [22.0, 434.5], [25.0, 488.0], [26.0, 500.0], [28.0, 495.0], [29.0, 497.0], [30.0, 519.3333333333334], [32.0, 513.0], [34.0, 490.5], [36.0, 483.0], [38.0, 416.0], [40.0, 359.3333333333333], [43.0, 382.0], [42.0, 360.0], [44.0, 423.0], [47.0, 419.0], [49.0, 428.0], [51.0, 550.4], [53.0, 350.0], [52.0, 598.0], [57.0, 333.5], [56.0, 343.0], [59.0, 337.0], [61.0, 332.0], [63.0, 358.0], [62.0, 345.6666666666667], [67.0, 327.0], [66.0, 322.5], [71.0, 348.0], [70.0, 339.75], [75.0, 322.22222222222223], [74.0, 335.0], [79.0, 337.22344322344344], [78.0, 330.89777777777766], [77.0, 331.35922330097094], [76.0, 326.0769230769231], [80.0, 340.1914893617018], [83.0, 363.26287262872637], [82.0, 348.0927318295739], [81.0, 344.11137440758296], [84.0, 361.136531365314], [85.0, 365.4473684210527], [86.0, 371.14096916299565], [87.0, 382.4528301886792], [89.0, 386.06896551724134], [90.0, 384.8859060402685], [91.0, 387.7722772277226], [88.0, 388.44516129032235], [93.0, 439.02000000000004], [94.0, 395.75862068965506], [95.0, 374.7307692307693], [92.0, 387.2258064516129], [96.0, 402.8333333333334], [97.0, 408.6666666666667], [98.0, 405.75], [99.0, 498.25], [102.0, 404.0], [100.0, 473.8888888888889], [101.0, 461.625], [103.0, 490.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[83.36075000000014, 361.612]], "isOverall": false, "label": "Update Booking-Aggregated", "isController": false}, {"data": [[2.0, 326.0], [4.0, 325.0], [5.0, 329.0], [7.0, 340.5], [8.0, 440.0], [12.0, 445.25], [13.0, 452.0], [14.0, 439.0], [16.0, 449.0], [17.0, 435.0], [18.0, 452.0], [19.0, 435.0], [20.0, 427.0], [21.0, 434.0], [22.0, 458.0], [23.0, 480.0], [25.0, 479.5], [26.0, 470.0], [28.0, 516.5], [29.0, 534.0], [30.0, 493.0], [31.0, 518.0], [33.0, 499.0], [32.0, 514.0], [34.0, 490.0], [37.0, 471.0], [36.0, 483.0], [39.0, 346.0], [38.0, 459.0], [40.0, 360.0], [43.0, 370.0], [42.0, 357.5], [44.0, 423.0], [47.0, 421.0], [46.0, 426.0], [49.0, 468.5], [51.0, 500.0], [53.0, 333.0], [52.0, 598.0], [55.0, 344.0], [54.0, 338.0], [57.0, 350.0], [56.0, 339.0], [59.0, 328.5], [61.0, 334.0], [63.0, 348.0], [62.0, 326.0], [67.0, 318.0], [66.0, 308.0], [65.0, 316.0], [64.0, 331.0], [71.0, 320.0], [70.0, 322.0], [69.0, 320.0], [68.0, 319.0], [75.0, 312.0], [74.0, 330.6666666666667], [79.0, 335.51908396946544], [78.0, 326.79268292682923], [77.0, 322.4927536231885], [76.0, 318.1428571428571], [83.0, 355.9746835443038], [82.0, 346.00503778337526], [81.0, 340.9282407407407], [80.0, 337.1383812010441], [84.0, 363.93949044586], [86.0, 369.0201612903226], [87.0, 385.02285714285705], [85.0, 362.96747967479666], [89.0, 382.1472868217054], [88.0, 385.05232558139534], [90.0, 396.7622377622378], [91.0, 395.3409090909091], [95.0, 379.66666666666663], [94.0, 395.3333333333333], [93.0, 406.9230769230769], [92.0, 384.86206896551727], [99.0, 433.9], [96.0, 402.9069767441861], [97.0, 446.8], [98.0, 429.1764705882353], [102.0, 407.875], [100.0, 425.33333333333326], [101.0, 490.0], [103.0, 483.75], [1.0, 353.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[83.23950000000018, 360.2694999999998]], "isOverall": false, "label": "Delete Booking-Aggregated", "isController": false}, {"data": [[43.0, 784.7368421052632], [44.0, 623.0], [47.0, 626.0], [46.0, 637.0], [50.0, 629.6666666666666], [52.0, 628.0], [53.0, 614.0], [54.0, 630.0], [55.0, 604.0], [56.0, 604.0], [60.0, 641.0], [61.0, 646.0], [63.0, 639.4], [62.0, 652.5], [67.0, 647.5], [66.0, 616.5], [68.0, 646.5], [69.0, 636.0], [70.0, 657.4], [71.0, 688.5], [72.0, 610.0], [73.0, 642.0], [74.0, 690.375], [75.0, 627.1428571428571], [76.0, 630.8666666666668], [78.0, 636.3219512195126], [79.0, 643.7886435331233], [77.0, 632.8555555555555], [83.0, 658.6637426900588], [80.0, 646.29854368932], [81.0, 649.6882793017455], [82.0, 655.0197044334973], [84.0, 666.1788079470194], [85.0, 668.212851405622], [87.0, 684.8103448275863], [86.0, 676.9808612440197], [88.0, 688.4893617021279], [89.0, 692.5271317829457], [90.0, 715.2809917355376], [91.0, 708.4827586206894], [92.0, 718.7105263157896], [93.0, 735.7272727272727], [95.0, 676.7027027027026], [94.0, 720.3499999999999], [96.0, 692.590909090909], [97.0, 758.3846153846155], [98.0, 673.5333333333333], [99.0, 662.7272727272727], [101.0, 666.8], [102.0, 685.5], [100.0, 654.2857142857143], [103.0, 679.0]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[83.34924999999981, 665.6335000000012]], "isOverall": false, "label": "Token generation-Aggregated", "isController": false}, {"data": [[38.0, 412.99999999999994], [43.0, 355.5], [42.0, 358.5], [44.0, 401.0], [46.0, 383.0], [49.0, 416.0], [51.0, 511.0], [50.0, 437.0], [53.0, 333.0], [54.0, 345.0], [57.0, 327.5], [59.0, 312.0], [62.0, 326.8], [67.0, 333.6], [66.0, 329.0], [70.0, 329.0], [74.0, 332.76923076923083], [75.0, 332.80952380952374], [76.0, 320.81481481481484], [77.0, 324.2666666666667], [78.0, 325.7632850241545], [79.0, 330.5958904109588], [80.0, 330.7718309859154], [81.0, 334.85496183206106], [82.0, 340.1960784313723], [83.0, 347.93659942363087], [85.0, 350.6259541984734], [86.0, 356.54260089686085], [84.0, 348.02439024390253], [87.0, 357.89743589743597], [89.0, 370.1118421052633], [90.0, 366.72058823529426], [91.0, 358.0740740740742], [88.0, 363.5270270270269], [92.0, 365.3894736842106], [93.0, 383.0333333333335], [94.0, 391.0357142857142], [95.0, 381.6122448979593], [97.0, 390.6470588235294], [98.0, 373.94999999999993], [96.0, 401.08571428571423], [99.0, 450.74999999999994], [101.0, 397.99999999999994], [102.0, 395.3333333333333], [100.0, 366.25], [103.0, 450.0]], "isOverall": false, "label": "Get Booking", "isController": false}, {"data": [[83.68074999999982, 347.89849999999956]], "isOverall": false, "label": "Get Booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 103.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2809.4, "minX": 1.69825128E12, "maxY": 130527.83333333333, "series": [{"data": [[1.6982514E12, 82193.05], [1.69825128E12, 5724.65], [1.69825134E12, 130527.83333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6982514E12, 40874.833333333336], [1.69825128E12, 2809.4], [1.69825134E12, 65382.433333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6982514E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 327.4741379310345, "minX": 1.69825128E12, "maxY": 671.8906249999993, "series": [{"data": [[1.6982514E12, 351.68371467025577], [1.69825128E12, 327.4741379310345], [1.69825134E12, 343.6121768140118]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[1.6982514E12, 373.08327825512254], [1.69825128E12, 352.68539325842687], [1.69825134E12, 354.70558798999133]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.6982514E12, 373.0320680628276], [1.69825128E12, 347.1066666666668], [1.69825134E12, 352.54568210262886]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.6982514E12, 671.8906249999993], [1.69825128E12, 659.0465116279066], [1.69825134E12, 662.148395164653]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[1.6982514E12, 354.6199999999997], [1.69825128E12, 332.51456310679634], [1.69825134E12, 344.35335836462343]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6982514E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 327.3879310344825, "minX": 1.69825128E12, "maxY": 671.8838315217387, "series": [{"data": [[1.6982514E12, 351.680349932705], [1.69825128E12, 327.3879310344825], [1.69825134E12, 343.6030025020845]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[1.6982514E12, 373.0799735624586], [1.69825128E12, 352.6629213483145], [1.69825134E12, 354.6926605504598]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.6982514E12, 373.0274869109949], [1.69825128E12, 347.05333333333346], [1.69825134E12, 352.5327492699209]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.6982514E12, 671.8838315217387], [1.69825128E12, 657.7906976744192], [1.69825134E12, 662.1358899541475]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[1.6982514E12, 354.6126666666663], [1.69825128E12, 332.4660194174758], [1.69825134E12, 344.3408427200661]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6982514E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69825128E12, "maxY": 335.68217054263573, "series": [{"data": [[1.6982514E12, 0.0], [1.69825128E12, 0.0], [1.69825134E12, 0.0]], "isOverall": false, "label": "Set Booking", "isController": false}, {"data": [[1.6982514E12, 0.0], [1.69825128E12, 0.0], [1.69825134E12, 0.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.6982514E12, 0.0], [1.69825128E12, 0.0], [1.69825134E12, 0.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.6982514E12, 332.1698369565209], [1.69825128E12, 335.68217054263573], [1.69825134E12, 327.77407253022056]], "isOverall": false, "label": "Token generation", "isController": false}, {"data": [[1.6982514E12, 0.0], [1.69825128E12, 0.0], [1.69825134E12, 0.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6982514E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 289.0, "minX": 1.69825128E12, "maxY": 1542.0, "series": [{"data": [[1.6982514E12, 1388.0], [1.69825128E12, 855.0], [1.69825134E12, 1542.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6982514E12, 659.0], [1.69825128E12, 646.0], [1.69825134E12, 648.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6982514E12, 763.0], [1.69825128E12, 855.0], [1.69825134E12, 785.2000000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6982514E12, 691.0], [1.69825128E12, 673.3499999999999], [1.69825134E12, 673.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6982514E12, 293.0], [1.69825128E12, 294.0], [1.69825134E12, 289.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6982514E12, 362.0], [1.69825128E12, 340.0], [1.69825134E12, 345.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6982514E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 328.0, "minX": 29.0, "maxY": 608.5, "series": [{"data": [[29.0, 439.0], [91.0, 469.0], [93.0, 604.0], [140.0, 608.5], [150.0, 465.0], [160.0, 388.5], [164.0, 370.0], [169.0, 372.0], [170.0, 357.0], [173.0, 348.0], [183.0, 369.0], [176.0, 351.5], [182.0, 336.0], [179.0, 347.5], [178.0, 392.0], [181.0, 358.0], [188.0, 328.0], [186.0, 351.5], [190.0, 365.5], [187.0, 371.0], [184.0, 360.5], [189.0, 397.0], [199.0, 352.0], [192.0, 346.5], [195.0, 378.0], [196.0, 341.5], [198.0, 340.0], [197.0, 369.0], [194.0, 347.5], [201.0, 357.0], [200.0, 342.5], [203.0, 336.0], [204.0, 350.0], [206.0, 334.5], [205.0, 347.0], [202.0, 342.0], [209.0, 348.5], [210.0, 335.0], [215.0, 368.0], [213.0, 336.5], [214.0, 347.0], [208.0, 352.0], [212.0, 372.0], [221.0, 343.0], [216.0, 332.0], [217.0, 332.0], [218.0, 368.5], [220.0, 354.0], [219.0, 343.0], [228.0, 395.5], [224.0, 349.0], [232.0, 360.0], [233.0, 357.0], [240.0, 364.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 240.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 328.0, "minX": 29.0, "maxY": 608.5, "series": [{"data": [[29.0, 439.0], [91.0, 469.0], [93.0, 604.0], [140.0, 608.5], [150.0, 465.0], [160.0, 388.5], [164.0, 370.0], [169.0, 372.0], [170.0, 357.0], [173.0, 348.0], [183.0, 369.0], [176.0, 351.5], [182.0, 336.0], [179.0, 347.5], [178.0, 392.0], [181.0, 358.0], [188.0, 328.0], [186.0, 351.5], [190.0, 365.5], [187.0, 371.0], [184.0, 360.5], [189.0, 397.0], [199.0, 352.0], [192.0, 346.5], [195.0, 378.0], [196.0, 341.5], [198.0, 340.0], [197.0, 369.0], [194.0, 347.5], [201.0, 357.0], [200.0, 342.5], [203.0, 336.0], [204.0, 350.0], [206.0, 334.5], [205.0, 347.0], [202.0, 342.0], [209.0, 348.5], [210.0, 335.0], [215.0, 368.0], [213.0, 336.5], [214.0, 347.0], [208.0, 352.0], [212.0, 372.0], [221.0, 343.0], [216.0, 332.0], [217.0, 332.0], [218.0, 368.5], [220.0, 354.0], [219.0, 343.0], [228.0, 395.5], [224.0, 349.0], [232.0, 360.0], [233.0, 357.0], [240.0, 364.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 240.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.866666666666667, "minX": 1.69825128E12, "maxY": 199.86666666666667, "series": [{"data": [[1.6982514E12, 123.6], [1.69825128E12, 9.866666666666667], [1.69825134E12, 199.86666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6982514E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.25, "minX": 1.69825128E12, "maxY": 159.86666666666667, "series": [{"data": [[1.6982514E12, 99.51666666666667], [1.69825128E12, 7.283333333333333], [1.69825134E12, 159.86666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6982514E12, 25.466666666666665], [1.69825128E12, 1.25], [1.69825134E12, 39.95]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6982514E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.25, "minX": 1.69825128E12, "maxY": 39.983333333333334, "series": [{"data": [[1.6982514E12, 25.216666666666665], [1.69825128E12, 1.4833333333333334], [1.69825134E12, 39.96666666666667]], "isOverall": false, "label": "Update Booking-success", "isController": false}, {"data": [[1.6982514E12, 25.466666666666665], [1.69825128E12, 1.25], [1.69825134E12, 39.95]], "isOverall": false, "label": "Delete Booking-success", "isController": false}, {"data": [[1.6982514E12, 24.533333333333335], [1.69825128E12, 2.15], [1.69825134E12, 39.983333333333334]], "isOverall": false, "label": "Token generation-success", "isController": false}, {"data": [[1.6982514E12, 24.766666666666666], [1.69825128E12, 1.9333333333333333], [1.69825134E12, 39.96666666666667]], "isOverall": false, "label": "Set Booking-success", "isController": false}, {"data": [[1.6982514E12, 25.0], [1.69825128E12, 1.7166666666666666], [1.69825134E12, 39.95]], "isOverall": false, "label": "Get Booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6982514E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.533333333333333, "minX": 1.69825128E12, "maxY": 199.81666666666666, "series": [{"data": [[1.6982514E12, 124.98333333333333], [1.69825128E12, 8.533333333333333], [1.69825134E12, 199.81666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6982514E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

